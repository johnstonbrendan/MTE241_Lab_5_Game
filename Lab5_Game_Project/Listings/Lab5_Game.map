Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    glcd_scroll.o(i.append_char) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.append_char) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayChar) for GLCD_DisplayChar
    glcd_scroll.o(i.append_char) refers to glcd_scroll.o(i.last_line) for last_line
    glcd_scroll.o(i.append_char) refers to glcd_scroll.o(.data) for last_col_cahche
    glcd_scroll.o(i.append_char) refers to glcd_scroll.o(.bss) for chache
    glcd_scroll.o(i.init_scroll) refers to glcd_spi_lpc1700.o(i.GLCD_Init) for GLCD_Init
    glcd_scroll.o(i.init_scroll) refers to glcd_spi_lpc1700.o(i.GLCD_Clear) for GLCD_Clear
    glcd_scroll.o(i.init_scroll) refers to glcd_spi_lpc1700.o(i.GLCD_SetBackColor) for GLCD_SetBackColor
    glcd_scroll.o(i.init_scroll) refers to glcd_spi_lpc1700.o(i.GLCD_SetTextColor) for GLCD_SetTextColor
    glcd_scroll.o(i.init_scroll) refers to glcd_scroll.o(.data) for cache_start
    glcd_scroll.o(i.joyStickBusyWaitingMonitor) refers to glcd_scroll.o(i.moveUp) for moveUp
    glcd_scroll.o(i.joyStickBusyWaitingMonitor) refers to glcd_scroll.o(i.moveDown) for moveDown
    glcd_scroll.o(i.joyStickBusyWaitingMonitor) refers to glcd_scroll.o(i.moveFirst) for moveFirst
    glcd_scroll.o(i.joyStickBusyWaitingMonitor) refers to glcd_scroll.o(i.moveLast) for moveLast
    glcd_scroll.o(i.last_line) refers to glcd_scroll.o(.data) for cache_start
    glcd_scroll.o(i.last_window_line) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.moveDown) refers to glcd_scroll.o(i.last_line) for last_line
    glcd_scroll.o(i.moveDown) refers to glcd_scroll.o(i.last_window_line) for last_window_line
    glcd_scroll.o(i.moveDown) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.moveDown) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.moveFirst) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.moveFirst) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.moveLast) refers to glcd_scroll.o(i.last_line) for last_line
    glcd_scroll.o(i.moveLast) refers to glcd_scroll.o(i.last_window_line) for last_window_line
    glcd_scroll.o(i.moveLast) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.moveLast) refers to glcd_scroll.o(.data) for cache_size
    glcd_scroll.o(i.moveUp) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.moveUp) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.print_string) refers to glcd_scroll.o(i.print_text) for print_text
    glcd_scroll.o(i.print_text) refers to glcd_scroll.o(i.append_char) for append_char
    glcd_scroll.o(i.refresh_lcd) refers to glcd_spi_lpc1700.o(i.GLCD_Clear) for GLCD_Clear
    glcd_scroll.o(i.refresh_lcd) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayString) for GLCD_DisplayString
    glcd_scroll.o(i.refresh_lcd) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.refresh_lcd) refers to glcd_scroll.o(.bss) for chache
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.GLCD_SetWindow) for GLCD_SetWindow
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.wr_dat_start) for wr_dat_start
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.wr_dat_only) for wr_dat_only
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.wr_dat_stop) for wr_dat_stop
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(.data) for Color
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.GLCD_SetWindow) for GLCD_SetWindow
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.wr_dat_start) for wr_dat_start
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.wr_dat_only) for wr_dat_only
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.wr_dat_stop) for wr_dat_stop
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.GLCD_WindowMax) for GLCD_WindowMax
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.wr_dat_start) for wr_dat_start
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.wr_dat_only) for wr_dat_only
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.wr_dat_stop) for wr_dat_stop
    glcd_spi_lpc1700.o(i.GLCD_ClearLn) refers to glcd_spi_lpc1700.o(i.GLCD_WindowMax) for GLCD_WindowMax
    glcd_spi_lpc1700.o(i.GLCD_ClearLn) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayString) for GLCD_DisplayString
    glcd_spi_lpc1700.o(i.GLCD_DisplayChar) refers to glcd_spi_lpc1700.o(i.GLCD_DrawChar) for GLCD_DrawChar
    glcd_spi_lpc1700.o(i.GLCD_DisplayChar) refers to glcd_spi_lpc1700.o(.constdata) for Font_6x8_h
    glcd_spi_lpc1700.o(i.GLCD_DisplayString) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayChar) for GLCD_DisplayChar
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.GLCD_SetWindow) for GLCD_SetWindow
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.wr_dat_start) for wr_dat_start
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.wr_dat_only) for wr_dat_only
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.wr_dat_stop) for wr_dat_stop
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(.data) for Color
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(i.rd_id_man) for rd_id_man
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(i.rd_reg) for rd_reg
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(i.wr_reg) for wr_reg
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(i.delay) for delay
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(.data) for Himax
    glcd_spi_lpc1700.o(i.GLCD_PutPixel) refers to glcd_spi_lpc1700.o(i.wr_reg) for wr_reg
    glcd_spi_lpc1700.o(i.GLCD_PutPixel) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_PutPixel) refers to glcd_spi_lpc1700.o(i.wr_dat) for wr_dat
    glcd_spi_lpc1700.o(i.GLCD_PutPixel) refers to glcd_spi_lpc1700.o(.data) for Himax
    glcd_spi_lpc1700.o(i.GLCD_SetBackColor) refers to glcd_spi_lpc1700.o(.data) for Color
    glcd_spi_lpc1700.o(i.GLCD_SetTextColor) refers to glcd_spi_lpc1700.o(.data) for Color
    glcd_spi_lpc1700.o(i.GLCD_SetWindow) refers to glcd_spi_lpc1700.o(i.wr_reg) for wr_reg
    glcd_spi_lpc1700.o(i.GLCD_SetWindow) refers to glcd_spi_lpc1700.o(.data) for Himax
    glcd_spi_lpc1700.o(i.GLCD_WindowMax) refers to glcd_spi_lpc1700.o(i.GLCD_SetWindow) for GLCD_SetWindow
    glcd_spi_lpc1700.o(i.GLCD_WrCmd) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_WrReg) refers to glcd_spi_lpc1700.o(i.wr_reg) for wr_reg
    glcd_spi_lpc1700.o(i.rd_id_man) refers to glcd_spi_lpc1700.o(i.spi_tran_man) for spi_tran_man
    glcd_spi_lpc1700.o(i.rd_reg) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.rd_reg) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.spi_tran_man) refers to glcd_spi_lpc1700.o(i.delay) for delay
    glcd_spi_lpc1700.o(i.wr_cmd) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.wr_dat) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.wr_dat_only) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.wr_dat_start) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.wr_reg) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.wr_reg) refers to glcd_spi_lpc1700.o(i.wr_dat) for wr_dat
    retarget.o(i._ttywrch) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.fgetc) refers to retarget.o(i.getkey) for getkey
    retarget.o(i.fgetc) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.fputc) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.getkey) refers to uart.o(i.UARTReceiveChar) for UARTReceiveChar
    retarget.o(i.sendchar) refers to uart.o(i.UARTSendChar) for UARTSendChar
    uart.o(i.FreeRcv) refers to uart.o(i.Free) for Free
    uart.o(i.FreeRcv) refers to uart.o(.data) for RcvLock0
    uart.o(i.FreeSnd) refers to uart.o(i.Free) for Free
    uart.o(i.FreeSnd) refers to uart.o(.data) for SndLock0
    uart.o(i.LockRcv) refers to uart.o(i.Lock) for Lock
    uart.o(i.LockRcv) refers to uart.o(.data) for RcvLock0
    uart.o(i.LockSnd) refers to uart.o(i.Lock) for Lock
    uart.o(i.LockSnd) refers to uart.o(.data) for SndLock0
    uart.o(i.UART0_IRQHandler) refers to uart.o(.bss) for UART0Buffer
    uart.o(i.UART0_IRQHandler) refers to uart.o(.data) for UART0Count
    uart.o(i.UART1_IRQHandler) refers to uart.o(.bss) for UART1Buffer
    uart.o(i.UART1_IRQHandler) refers to uart.o(.data) for UART1Count
    uart.o(i.UARTInit) refers to uart.o(i.getFrequency) for getFrequency
    uart.o(i.UARTInit) refers to uart.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    uart.o(i.UARTInit) refers to uart.o(i.FreeRcv) for FreeRcv
    uart.o(i.UARTInit) refers to uart.o(i.FreeSnd) for FreeSnd
    uart.o(i.UARTReceiveChar) refers to uart.o(.data) for ITM_RxBuffer
    uart.o(i.UARTRecieve) refers to uart.o(i.LockRcv) for LockRcv
    uart.o(i.UARTRecieve) refers to uart.o(i.FreeRcv) for FreeRcv
    uart.o(i.UARTRecieve) refers to uart.o(.data) for UART0Count
    uart.o(i.UARTRecieve) refers to uart.o(.bss) for UART0Buffer
    uart.o(i.UARTSend) refers to uart.o(i.LockSnd) for LockSnd
    uart.o(i.UARTSend) refers to uart.o(i.FreeSnd) for FreeSnd
    uart.o(i.UARTSend) refers to uart.o(.data) for UART0TxEmpty
    uart.o(i.getFrequency) refers to system_lpc17xx.o(.data) for SystemCoreClock
    main.o(i.init) refers to enemy.o(i.enemy_init) for enemy_init
    main.o(i.init) refers to gui.o(i.GUI_Start) for GUI_Start
    main.o(i.init) refers to pushbutton.o(i.setup_INT0) for setup_INT0
    main.o(i.init) refers to joy.o(i.Joy_init) for Joy_init
    main.o(i.init) refers to player.o(i.player_init) for player_init
    main.o(i.main) refers to main.o(i.init) for init
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(i.main) refers to gui.o(i.GUI_Task) for GUI_Task
    main.o(i.main) refers to main.o(.data) for GUI_Thread
    main.o(i.main) refers to pot.o(i.Pot_Task) for Pot_Task
    main.o(i.main) refers to joy.o(i.Joy_Task) for Joy_Task
    main.o(i.main) refers to enemy.o(i.enemy_task) for enemy_task
    main.o(i.main) refers to player.o(i.player_task) for player_task
    gui.o(i.GUI_Level_1) refers to gui.o(i.animate_enemy) for animate_enemy
    gui.o(i.GUI_Level_1) refers to gui.o(i.animate_player) for animate_player
    gui.o(i.GUI_Level_1) refers to enemy.o(.bss) for enemies
    gui.o(i.GUI_Level_1) refers to gui.o(.data) for game_state
    gui.o(i.GUI_Level_Menu) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    gui.o(i.GUI_Level_Menu) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    gui.o(i.GUI_Level_Menu) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayString) for GLCD_DisplayString
    gui.o(i.GUI_Level_Menu) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayChar) for GLCD_DisplayChar
    gui.o(i.GUI_Level_Menu) refers to glcd_spi_lpc1700.o(i.GLCD_Clear) for GLCD_Clear
    gui.o(i.GUI_Level_Menu) refers to joy.o(.data) for joy_val_id
    gui.o(i.GUI_Level_Menu) refers to gui.o(.data) for sel_lev
    gui.o(i.GUI_Level_Menu) refers to pushbutton.o(.data) for button_pushed
    gui.o(i.GUI_Start) refers to glcd_spi_lpc1700.o(i.GLCD_Init) for GLCD_Init
    gui.o(i.GUI_Start) refers to glcd_spi_lpc1700.o(i.GLCD_Clear) for GLCD_Clear
    gui.o(i.GUI_Start) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayString) for GLCD_DisplayString
    gui.o(i.GUI_Start) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayChar) for GLCD_DisplayChar
    gui.o(i.GUI_Start) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    gui.o(i.GUI_Start) refers to gui.o(.data) for sel_lev
    gui.o(i.GUI_Task) refers to gui.o(i.GUI_Level_Menu) for GUI_Level_Menu
    gui.o(i.GUI_Task) refers to glcd_spi_lpc1700.o(i.GLCD_Clear) for GLCD_Clear
    gui.o(i.GUI_Task) refers to gui.o(i.GUI_Level_1) for GUI_Level_1
    gui.o(i.GUI_Task) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayString) for GLCD_DisplayString
    gui.o(i.GUI_Task) refers to gui.o(.data) for game_state
    gui.o(i.animate_enemy) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    gui.o(i.animate_enemy) refers to glcd_spi_lpc1700.o(i.GLCD_Bitmap) for GLCD_Bitmap
    gui.o(i.animate_enemy) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    gui.o(i.animate_enemy) refers to enemy.o(.data) for enemy_loc_id
    gui.o(i.animate_enemy) refers to bitmaps.o(.constdata) for enemy_map
    gui.o(i.animate_player) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    gui.o(i.animate_player) refers to glcd_spi_lpc1700.o(i.GLCD_Bitmap) for GLCD_Bitmap
    gui.o(i.animate_player) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    gui.o(i.animate_player) refers to player.o(.data) for player_loc_id
    gui.o(i.animate_player) refers to bitmaps.o(.constdata) for enemy_map
    joy.o(i.Joy_Task) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    joy.o(i.Joy_Task) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    joy.o(i.Joy_Task) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    joy.o(i.Joy_Task) refers to joy.o(.data) for joy_val_id
    joy.o(i.Joy_init) refers to h1_alloc_mt.o(.text) for malloc
    joy.o(i.Joy_init) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    joy.o(i.Joy_init) refers to joy.o(.data) for joy_in
    pot.o(i.Pot_Task) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    pot.o(i.Pot_Task) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    pot.o(i.Pot_Task) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    pot.o(i.Pot_Task) refers to pot.o(.data) for pot_val_id
    pushbutton.o(i.EINT3_IRQHandler) refers to pushbutton.o(.data) for button_pushed
    enemy.o(i.enemy_init) refers to h1_alloc_mt.o(.text) for malloc
    enemy.o(i.enemy_init) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    enemy.o(i.enemy_init) refers to enemy.o(i.enemy_path) for enemy_path
    enemy.o(i.enemy_init) refers to h1_free_mt.o(.text) for free
    enemy.o(i.enemy_init) refers to enemy.o(.data) for enemy_time
    enemy.o(i.enemy_init) refers to enemy.o(.bss) for enemies
    enemy.o(i.enemy_path) refers to dflt_clz.o(x$fpl$dflt) for __aeabi_i2d
    enemy.o(i.enemy_path) refers to sin.o(i.sin) for sin
    enemy.o(i.enemy_path) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    enemy.o(i.enemy_path) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    enemy.o(i.enemy_path) refers to dfix.o(x$fpl$dfix) for __aeabi_d2iz
    enemy.o(i.enemy_path) refers to enemy.o(.data) for enemy_time
    enemy.o(i.enemy_task) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    enemy.o(i.enemy_task) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    enemy.o(i.enemy_task) refers to enemy.o(i.enemy_path) for enemy_path
    enemy.o(i.enemy_task) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    enemy.o(i.enemy_task) refers to pot.o(.data) for pot_val_id
    enemy.o(i.enemy_task) refers to enemy.o(.data) for enemy_time
    enemy.o(i.enemy_task) refers to enemy.o(.bss) for enemies
    player.o(i.ladder_avaliable) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    player.o(i.ladder_avaliable) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    player.o(i.ladder_avaliable) refers to player.o(.data) for player_loc_id
    player.o(i.player_init) refers to h1_alloc_mt.o(.text) for malloc
    player.o(i.player_init) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    player.o(i.player_init) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    player.o(i.player_init) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    player.o(i.player_init) refers to player.o(.data) for player_info
    player.o(i.player_task) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    player.o(i.player_task) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    player.o(i.player_task) refers to player.o(i.ladder_avaliable) for ladder_avaliable
    player.o(i.player_task) refers to h1_alloc_mt.o(.text) for malloc
    player.o(i.player_task) refers to player.o(i.legalize) for legalize
    player.o(i.player_task) refers to h1_free_mt.o(.text) for free
    player.o(i.player_task) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    player.o(i.player_task) refers to joy.o(.data) for joy_val_id
    player.o(i.player_task) refers to pushbutton.o(.data) for button_pushed
    player.o(i.player_task) refers to player.o(.data) for player_loc_id
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for os_kernel_active
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    startup_lpc17xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(RESET) refers to startup_lpc17xx.o(STACK) for __initial_sp
    startup_lpc17xx.o(RESET) refers to startup_lpc17xx.o(.text) for Reset_Handler
    startup_lpc17xx.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_lpc17xx.o(RESET) refers to uart.o(i.UART0_IRQHandler) for UART0_IRQHandler
    startup_lpc17xx.o(RESET) refers to uart.o(i.UART1_IRQHandler) for UART1_IRQHandler
    startup_lpc17xx.o(RESET) refers to pushbutton.o(i.EINT3_IRQHandler) for EINT3_IRQHandler
    startup_lpc17xx.o(.ARM.__at_0x02FC) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(.text) refers to system_lpc17xx.o(i.SystemInit) for SystemInit
    startup_lpc17xx.o(.text) refers to __main.o(!!!main) for __main
    startup_lpc17xx.o(.text) refers to startup_lpc17xx.o(HEAP) for Heap_Mem
    startup_lpc17xx.o(.text) refers to startup_lpc17xx.o(STACK) for Stack_Mem
    system_lpc17xx.o(i.SystemCoreClockUpdate) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    system_lpc17xx.o(i.SystemCoreClockUpdate) refers to system_lpc17xx.o(.data) for SystemCoreClock
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm3.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_lpc17xx.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_lpc17xx.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_alloc.o(.text) refers (Special) to h1_init_mt.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc_mt.o(.text) refers (Special) to h1_init_mt.o(.text) for __Heap_Initialize
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    h1_alloc_mt.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    h1_alloc_mt.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_free_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    h1_free_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    h1_free_mt.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.___Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i._free$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._malloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._posix_memalign$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to h1_free_mt.o(.text) for free
    heap2.o(i._realloc$realtime) refers to h1_alloc_mt.o(.text) for malloc
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2mt.o(i._FDIterate) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i.___Heap_Finalize$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_free) for _mutex_free
    heap2mt.o(i.___Heap_Initialize$realtime$concurrent) refers to rtx_lib.o(i._mutex_initialize) for _mutex_initialize
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers to heap2mt.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(i._FDIterate) for _FDIterate
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i._free$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._free$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._free$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._malloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_free_mt.o(.text) for free
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_alloc_mt.o(.text) for malloc
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    daddsub_clz.o(x$fpl$dadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$dadd) refers to daddsub_clz.o(x$fpl$dsub) for _dsub1
    daddsub_clz.o(x$fpl$dadd) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    daddsub_clz.o(x$fpl$dadd) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    daddsub_clz.o(x$fpl$drsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$drsb) refers to daddsub_clz.o(x$fpl$dadd) for _dadd1
    daddsub_clz.o(x$fpl$drsb) refers to daddsub_clz.o(x$fpl$dsub) for _dsub1
    daddsub_clz.o(x$fpl$dsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$dsub) refers to daddsub_clz.o(x$fpl$dadd) for _dadd1
    daddsub_clz.o(x$fpl$dsub) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfix.o(x$fpl$dfix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfix) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfix.o(x$fpl$dfixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfixr) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dflt_clz.o(x$fpl$dfltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dfltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    dmul.o(x$fpl$dmul) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    sin.o(i.__softfp_sin) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sin.o(i.__softfp_sin) refers to sin.o(i.sin) for sin
    sin.o(i.sin) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sin.o(i.sin) refers to _rserrno.o(.text) for __set_errno
    sin.o(i.sin) refers to dunder.o(i.__mathlib_dbl_invalid) for __mathlib_dbl_invalid
    sin.o(i.sin) refers to dunder.o(i.__mathlib_dbl_infnan) for __mathlib_dbl_infnan
    sin.o(i.sin) refers to rred.o(i.__ieee754_rem_pio2) for __ieee754_rem_pio2
    sin.o(i.sin) refers to cos_i.o(i.__kernel_cos) for __kernel_cos
    sin.o(i.sin) refers to sin_i.o(i.__kernel_sin) for __kernel_sin
    sin_x.o(i.____softfp_sin$lsc) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sin_x.o(i.____softfp_sin$lsc) refers to sin_x.o(i.__sin$lsc) for __sin$lsc
    sin_x.o(i.__sin$lsc) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sin_x.o(i.__sin$lsc) refers to _rserrno.o(.text) for __set_errno
    sin_x.o(i.__sin$lsc) refers to dunder.o(i.__mathlib_dbl_infnan) for __mathlib_dbl_infnan
    sin_x.o(i.__sin$lsc) refers to rred.o(i.__ieee754_rem_pio2) for __ieee754_rem_pio2
    sin_x.o(i.__sin$lsc) refers to cos_i.o(i.__kernel_cos) for __kernel_cos
    sin_x.o(i.__sin$lsc) refers to sin_i.o(i.__kernel_sin) for __kernel_sin
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_heap_descriptor_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000005) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc2.o(.emb_text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend_mt.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init_mt.o(.text) for __Heap_Initialize
    h1_init_mt.o(.text) refers to rtx_lib.o(i._mutex_initialize) for _mutex_initialize
    _rserrno.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit2.o(.ARM.Collect$$libinit$$00000005) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    cos_i.o(i.__kernel_cos) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    cos_i.o(i.__kernel_cos) refers to dfix.o(x$fpl$dfix) for __aeabi_d2iz
    cos_i.o(i.__kernel_cos) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    cos_i.o(i.__kernel_cos) refers to poly.o(i.__kernel_poly) for __kernel_poly
    cos_i.o(i.__kernel_cos) refers to daddsub_clz.o(x$fpl$dsub) for __aeabi_dsub
    cos_i.o(i.__kernel_cos) refers to scalbn.o(x$fpl$scalbn) for __ARM_scalbn
    cos_i.o(i.__kernel_cos) refers to daddsub_clz.o(x$fpl$drsb) for __aeabi_drsub
    cos_i.o(i.__kernel_cos) refers to cos_i.o(.constdata) for .constdata
    cos_i.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dunder.o(i.__mathlib_dbl_divzero) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_infnan) refers to scalbn.o(x$fpl$scalbn) for __ARM_scalbn
    dunder.o(i.__mathlib_dbl_infnan2) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    dunder.o(i.__mathlib_dbl_invalid) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_overflow) refers to scalbn.o(x$fpl$scalbn) for __ARM_scalbn
    dunder.o(i.__mathlib_dbl_posinfnan) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    dunder.o(i.__mathlib_dbl_underflow) refers to scalbn.o(x$fpl$scalbn) for __ARM_scalbn
    rred.o(i.__ieee754_rem_pio2) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    rred.o(i.__ieee754_rem_pio2) refers to daddsub_clz.o(x$fpl$dsub) for __aeabi_dsub
    rred.o(i.__ieee754_rem_pio2) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    rred.o(i.__ieee754_rem_pio2) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    rred.o(i.__ieee754_rem_pio2) refers to dfix.o(x$fpl$dfix) for __aeabi_d2iz
    rred.o(i.__ieee754_rem_pio2) refers to dflt_clz.o(x$fpl$dflt) for __aeabi_i2d
    rred.o(i.__ieee754_rem_pio2) refers to daddsub_clz.o(x$fpl$drsb) for __aeabi_drsub
    rred.o(i.__ieee754_rem_pio2) refers to dflt_clz.o(x$fpl$dfltu) for __aeabi_ui2d
    rred.o(i.__ieee754_rem_pio2) refers to scalbn.o(x$fpl$scalbn) for __ARM_scalbn
    rred.o(i.__ieee754_rem_pio2) refers to rred.o(.constdata) for .constdata
    rred.o(i.__use_accurate_range_reduction) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    rred.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sin_i.o(i.__kernel_sin) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sin_i.o(i.__kernel_sin) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    sin_i.o(i.__kernel_sin) refers to dunder.o(i.__mathlib_dbl_underflow) for __mathlib_dbl_underflow
    sin_i.o(i.__kernel_sin) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    sin_i.o(i.__kernel_sin) refers to poly.o(i.__kernel_poly) for __kernel_poly
    sin_i.o(i.__kernel_sin) refers to scalbn.o(x$fpl$scalbn) for __ARM_scalbn
    sin_i.o(i.__kernel_sin) refers to daddsub_clz.o(x$fpl$dsub) for __aeabi_dsub
    sin_i.o(i.__kernel_sin) refers to daddsub_clz.o(x$fpl$drsb) for __aeabi_drsub
    sin_i.o(i.__kernel_sin) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    sin_i.o(i.__kernel_sin) refers to sin_i.o(.constdata) for .constdata
    sin_i.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sin_i_x.o(i.____kernel_sin$lsc) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sin_i_x.o(i.____kernel_sin$lsc) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    sin_i_x.o(i.____kernel_sin$lsc) refers to poly.o(i.__kernel_poly) for __kernel_poly
    sin_i_x.o(i.____kernel_sin$lsc) refers to scalbn.o(x$fpl$scalbn) for __ARM_scalbn
    sin_i_x.o(i.____kernel_sin$lsc) refers to daddsub_clz.o(x$fpl$dsub) for __aeabi_dsub
    sin_i_x.o(i.____kernel_sin$lsc) refers to daddsub_clz.o(x$fpl$drsb) for __aeabi_drsub
    sin_i_x.o(i.____kernel_sin$lsc) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    sin_i_x.o(i.____kernel_sin$lsc) refers to sin_i_x.o(.constdata) for .constdata
    sin_i_x.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(i.__user_perthread_libspace) for __user_perthread_libspace
    maybetermalloc2.o(.emb_text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free_mt.o(.text) for free
    h1_extend_mt.o(.text) refers to h1_free_mt.o(.text) for _free_internal
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    ddiv.o(x$fpl$drdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$drdiv) refers to ddiv.o(x$fpl$ddiv) for ddiv_entry
    ddiv.o(x$fpl$ddiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$ddiv) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    ddiv.o(x$fpl$ddiv) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    scalbn.o(x$fpl$scalbn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    scalbn.o(x$fpl$scalbn) refers to dcheck1.o(x$fpl$dcheck1) for __fpl_dcheck_NaN1
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    poly.o(i.__kernel_poly) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    poly.o(i.__kernel_poly) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    poly.o(i.__kernel_poly) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_lpc17xx.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to retarget.o(i._sys_exit) for _sys_exit
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final_mt.o(.text) for __Heap_Finalize
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to retarget.o(i._sys_exit) for _sys_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    dcheck1.o(x$fpl$dcheck1) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcheck1.o(x$fpl$dcheck1) refers to retnan.o(x$fpl$retnan) for __fpl_return_NaN
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    h1_final_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_free) for _mutex_free
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to retarget.o(i._ttywrch) for _ttywrch
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    retnan.o(x$fpl$retnan) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    retnan.o(x$fpl$retnan) refers to trapv.o(x$fpl$trapveneer) for __fpl_cmpreturn
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to retarget.o(i._sys_exit) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    trapv.o(x$fpl$trapveneer) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1


==============================================================================

Removing Unused input sections from the image.

    Removing glcd_scroll.o(.rev16_text), (4 bytes).
    Removing glcd_scroll.o(.revsh_text), (4 bytes).
    Removing glcd_scroll.o(.rrx_text), (6 bytes).
    Removing glcd_scroll.o(i.append_char), (240 bytes).
    Removing glcd_scroll.o(i.initJoyStick), (108 bytes).
    Removing glcd_scroll.o(i.init_scroll), (72 bytes).
    Removing glcd_scroll.o(i.joyStickBusyWaitingMonitor), (96 bytes).
    Removing glcd_scroll.o(i.last_line), (32 bytes).
    Removing glcd_scroll.o(i.last_window_line), (32 bytes).
    Removing glcd_scroll.o(i.moveDown), (68 bytes).
    Removing glcd_scroll.o(i.moveFirst), (60 bytes).
    Removing glcd_scroll.o(i.moveLast), (96 bytes).
    Removing glcd_scroll.o(i.moveUp), (72 bytes).
    Removing glcd_scroll.o(i.print_string), (34 bytes).
    Removing glcd_scroll.o(i.print_text), (24 bytes).
    Removing glcd_scroll.o(i.refresh_lcd), (80 bytes).
    Removing glcd_scroll.o(.bss), (525 bytes).
    Removing glcd_scroll.o(.data), (20 bytes).
    Removing glcd_spi_lpc1700.o(.rev16_text), (4 bytes).
    Removing glcd_spi_lpc1700.o(.revsh_text), (4 bytes).
    Removing glcd_spi_lpc1700.o(.rrx_text), (6 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_Bargraph), (104 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_ClearLn), (94 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_PutPixel), (128 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_ScrollVertical), (2 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_SetBackColor), (12 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_SetTextColor), (12 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_WrCmd), (12 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_WrReg), (16 bytes).
    Removing retarget.o(i.ferror), (8 bytes).
    Removing retarget.o(i.fgetc), (20 bytes).
    Removing retarget.o(i.fputc), (14 bytes).
    Removing retarget.o(i.getkey), (10 bytes).
    Removing retarget.o(.data), (8 bytes).
    Removing uart.o(.rev16_text), (4 bytes).
    Removing uart.o(.revsh_text), (4 bytes).
    Removing uart.o(.rrx_text), (6 bytes).
    Removing uart.o(i.Free), (6 bytes).
    Removing uart.o(i.FreeRcv), (36 bytes).
    Removing uart.o(i.FreeSnd), (36 bytes).
    Removing uart.o(i.Lock), (28 bytes).
    Removing uart.o(i.LockRcv), (36 bytes).
    Removing uart.o(i.LockSnd), (36 bytes).
    Removing uart.o(i.UARTInit), (188 bytes).
    Removing uart.o(i.UARTReceiveChar), (68 bytes).
    Removing uart.o(i.UARTRecieve), (160 bytes).
    Removing uart.o(i.UARTSend), (132 bytes).
    Removing uart.o(i.__NVIC_EnableIRQ), (26 bytes).
    Removing uart.o(i.getFrequency), (72 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing gui.o(.rev16_text), (4 bytes).
    Removing gui.o(.revsh_text), (4 bytes).
    Removing gui.o(.rrx_text), (6 bytes).
    Removing joy.o(.rev16_text), (4 bytes).
    Removing joy.o(.revsh_text), (4 bytes).
    Removing joy.o(.rrx_text), (6 bytes).
    Removing pot.o(.rev16_text), (4 bytes).
    Removing pot.o(.revsh_text), (4 bytes).
    Removing pot.o(.rrx_text), (6 bytes).
    Removing pushbutton.o(.rev16_text), (4 bytes).
    Removing pushbutton.o(.revsh_text), (4 bytes).
    Removing pushbutton.o(.rrx_text), (6 bytes).
    Removing enemy.o(.rev16_text), (4 bytes).
    Removing enemy.o(.revsh_text), (4 bytes).
    Removing enemy.o(.rrx_text), (6 bytes).
    Removing enemy.o(i.enemy_in_path), (4 bytes).
    Removing player.o(.rev16_text), (4 bytes).
    Removing player.o(.revsh_text), (4 bytes).
    Removing player.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(.emb_text), (0 bytes).
    Removing rtx_lib.o(.rodata), (56 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing system_lpc17xx.o(.rev16_text), (4 bytes).
    Removing system_lpc17xx.o(.revsh_text), (4 bytes).
    Removing system_lpc17xx.o(.rrx_text), (6 bytes).
    Removing system_lpc17xx.o(i.SystemCoreClockUpdate), (424 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (80 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (140 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (140 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (196 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (102 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (124 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (328 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (70 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (88 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (98 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (48 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (174 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).

381 unused section(s) (total 10337 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      204  startup_lpc17xx.o(RESET)
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/fenv.c                           0x00000000   Number         0  _rserrno.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_mt.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2mt.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/daddsub.s                       0x00000000   Number         0  daddsub_clz.o ABSOLUTE
    ../fplib/dcheck1.s                       0x00000000   Number         0  dcheck1.o ABSOLUTE
    ../fplib/ddiv.s                          0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/dfix.s                          0x00000000   Number         0  dfix.o ABSOLUTE
    ../fplib/dflt.s                          0x00000000   Number         0  dflt_clz.o ABSOLUTE
    ../fplib/dmul.s                          0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/retnan.s                        0x00000000   Number         0  retnan.o ABSOLUTE
    ../fplib/scalbn.s                        0x00000000   Number         0  scalbn.o ABSOLUTE
    ../fplib/trapv.s                         0x00000000   Number         0  trapv.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/cos_i.c                       0x00000000   Number         0  cos_i.o ABSOLUTE
    ../mathlib/dunder.c                      0x00000000   Number         0  dunder.o ABSOLUTE
    ../mathlib/fpclassify.c                  0x00000000   Number         0  fpclassify.o ABSOLUTE
    ../mathlib/poly.c                        0x00000000   Number         0  poly.o ABSOLUTE
    ../mathlib/rred.c                        0x00000000   Number         0  rred.o ABSOLUTE
    ../mathlib/sin.c                         0x00000000   Number         0  sin_x.o ABSOLUTE
    ../mathlib/sin.c                         0x00000000   Number         0  sin.o ABSOLUTE
    ../mathlib/sin_i.c                       0x00000000   Number         0  sin_i_x.o ABSOLUTE
    ../mathlib/sin_i.c                       0x00000000   Number         0  sin_i.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm3.s            0x00000000   Number         0  irq_cm3.o ABSOLUTE
    ..\..\additional_files\GLCD_SPI_LPC1700.c 0x00000000   Number         0  glcd_spi_lpc1700.o ABSOLUTE
    ..\..\additional_files\GLCD_Scroll.c     0x00000000   Number         0  glcd_scroll.o ABSOLUTE
    ..\..\additional_files\Retarget.c        0x00000000   Number         0  retarget.o ABSOLUTE
    ..\..\additional_files\uart.c            0x00000000   Number         0  uart.o ABSOLUTE
    ..\\..\\additional_files\\GLCD_SPI_LPC1700.c 0x00000000   Number         0  glcd_spi_lpc1700.o ABSOLUTE
    ..\\..\\additional_files\\GLCD_Scroll.c  0x00000000   Number         0  glcd_scroll.o ABSOLUTE
    ..\\..\\additional_files\\uart.c         0x00000000   Number         0  uart.o ABSOLUTE
    C:\Users\johns\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Users\\johns\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.5.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    GUI.c                                    0x00000000   Number         0  gui.o ABSOLUTE
    GUI.c                                    0x00000000   Number         0  gui.o ABSOLUTE
    Joy.c                                    0x00000000   Number         0  joy.o ABSOLUTE
    Joy.c                                    0x00000000   Number         0  joy.o ABSOLUTE
    Pot.c                                    0x00000000   Number         0  pot.o ABSOLUTE
    Pot.c                                    0x00000000   Number         0  pot.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\LPC1768\startup_LPC17xx.s     0x00000000   Number         0  startup_lpc17xx.o ABSOLUTE
    RTE\Device\LPC1768\system_LPC17xx.c      0x00000000   Number         0  system_lpc17xx.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\LPC1768\\system_LPC17xx.c   0x00000000   Number         0  system_lpc17xx.o ABSOLUTE
    bitmaps.c                                0x00000000   Number         0  bitmaps.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    enemy.c                                  0x00000000   Number         0  enemy.o ABSOLUTE
    enemy.c                                  0x00000000   Number         0  enemy.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    player.c                                 0x00000000   Number         0  player.o ABSOLUTE
    player.c                                 0x00000000   Number         0  player.o ABSOLUTE
    pushbutton.c                             0x00000000   Number         0  pushbutton.o ABSOLUTE
    pushbutton.c                             0x00000000   Number         0  pushbutton.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    !!!main                                  0x000000cc   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000d4   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x00000108   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x00000144   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000160   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x00000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x00000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000005          0x00000162   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000005)
    .ARM.Collect$$libinit$$0000000A          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0000016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0000016a   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x0000016c   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000016e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000016e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0000016e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0000016e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0000016e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000D      0x0000016e   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    .ARM.Collect$$libshutdown$$0000000F      0x00000172   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000172   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000174   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000174   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000174   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0000017a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x00000182   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000186   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000186   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000018e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000190   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000190   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000194   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x0000019c   Section        0  maybetermalloc2.o(.emb_text)
    .text                                    0x0000019c   Section       64  startup_lpc17xx.o(.text)
    .text                                    0x000001dc   Section      148  irq_cm3.o(.text)
    .text                                    0x00000270   Section        0  h1_free_mt.o(.text)
    .text                                    0x000002e6   Section        0  heapauxi.o(.text)
    .text                                    0x000002ec   Section       10  rt_heap_descriptor_twolibspace.o(.text)
    .text                                    0x000002f6   Section        0  hguard.o(.text)
    [Anonymous Symbol]                       0x000002fa   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    .ARM.__at_0x02FC                         0x000002fc   Section        4  startup_lpc17xx.o(.ARM.__at_0x02FC)
    .text                                    0x00000300   Section        0  h1_alloc_mt.o(.text)
    Heap1_SizeAdjust                         0x00000301   Thumb Code     8  h1_alloc_mt.o(.text)
    .text                                    0x0000039e   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x00000428   Section       68  rt_memclr.o(.text)
    .text                                    0x0000046c   Section       78  rt_memclr_w.o(.text)
    .text                                    0x000004ba   Section        0  init_alloc.o(.text)
    .text                                    0x00000544   Section        0  h1_init_mt.o(.text)
    .text                                    0x00000556   Section        0  _rserrno.o(.text)
    .text                                    0x0000056c   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x000005d0   Section        8  libspace.o(.text)
    .text                                    0x000005d8   Section        4  rt_errno_addr_twolibspace.o(.text)
    .text                                    0x000005dc   Section        0  h1_extend_mt.o(.text)
    .text                                    0x0000061a   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x00000628   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x00000672   Section        0  term_alloc.o(.text)
    .text                                    0x00000682   Section        0  exit.o(.text)
    .text                                    0x00000694   Section        0  defsig_exit.o(.text)
    .text                                    0x000006a0   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x000006f0   Section        0  h1_final_mt.o(.text)
    .text                                    0x000006fa   Section        0  defsig_general.o(.text)
    [Anonymous Symbol]                       0x0000072c   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueueGet                          0x0000072d   Thumb Code    68  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x00000770   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x00000771   Thumb Code    98  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x000007d2   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x000007d3   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x000007f0   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x000007f8   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x000007fc   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x0000081c   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x00000820   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x00000824   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x00000828   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x00000830   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x00000860   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x00000864   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x00000868   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x0000086c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x00000870   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x00000871   Thumb Code   108  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x000008dc   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x000008dd   Thumb Code    80  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x00000928   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x0000092c   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_0                             0x00000954   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_1                             0x00000958   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x0000095c   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.1_0                             0x00000984   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x00000988   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.6_0                             0x000009a8   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x000009ac   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x00000a14   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x00000a18   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x00000a38   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x00000a3c   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x00000ab0   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x00000ab4   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.3_0                             0x00000ad4   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x00000ad8   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.6_0                             0x00000af8   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x00000afc   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.1_0                             0x00000b1c   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x00000b20   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.4_0                             0x00000b40   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x00000b44   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00000bc0   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00000c12   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x00000c48   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x00000c80   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x00000cc8   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x00000d1c   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x00000d1d   Thumb Code   186  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00000dd6   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x00000e1c   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x00000ea4   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x00000ea8   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x00000f14   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x00000f18   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x00000f1c   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x00000f1d   Thumb Code    56  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x00000f50   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x00000f54   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x00000f55   Thumb Code   136  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x00000fd8   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x00000fdc   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x00000fdd   Thumb Code    76  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x00001024   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00001028   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x00001058   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x0000105c   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x000010b4   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x000010b8   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x000010b9   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x00001108   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x0000110c   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x00001120   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x0000114a   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x0000115e   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x00001186   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x00001187   Thumb Code    42  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x000011b0   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x000011c0   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x000011c4   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x000011cc   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_0                             0x000011ec   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_1                             0x000011f0   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x000011f4   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x00001224   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x00001228   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x0000122c   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_3                            0x00001230   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x00001234   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x00001240   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00001244   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x0000127c   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x00001280   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x000012a4   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x00001310   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x00001314   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x00001344   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x00001348   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x0000134c   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x00001350   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x00001351   Thumb Code    88  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x000013a4   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x000013a8   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.31_0                            0x000013b0   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x000013b4   Section        0  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.19_0                            0x000013d4   Number         4  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.19_1                            0x000013d8   Number         4  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x000013dc   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x000013fc   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x00001400   Section        0  rtx_thread.o(.text.osThreadYield)
    __arm_cp.26_0                            0x00001420   Number         4  rtx_thread.o(.text.osThreadYield)
    [Anonymous Symbol]                       0x00001424   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetState                     0x00001425   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.5_0                             0x0000142c   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x00001430   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x00001431   Thumb Code   340  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_0                            0x00001578   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_1                            0x0000157c   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_2                            0x00001580   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x00001584   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x00001585   Thumb Code   136  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_0                            0x000015fc   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_1                            0x00001600   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_2                            0x00001604   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_3                            0x00001608   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x0000160c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x0000160d   Thumb Code   228  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x000016ec   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x000016f0   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x000016f1   Thumb Code   308  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x0000181c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x00001820   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x00001824   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x00001825   Thumb Code   192  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x000018e0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x000018e4   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x000018e5   Thumb Code   144  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.9_0                             0x00001970   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x00001974   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexDelete                        0x00001975   Thumb Code   196  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.12_0                            0x00001a34   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x00001a38   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexNew                           0x00001a39   Thumb Code   108  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.7_0                             0x00001aa0   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x00001aa4   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x00001aa5   Thumb Code   180  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.10_0                            0x00001b54   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x00001b58   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x00001b59   Thumb Code   116  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x00001bc8   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x00001bcc   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadGetId                        0x00001bcd   Thumb Code    12  rtx_thread.o(.text.svcRtxThreadGetId)
    __arm_cp.20_0                            0x00001bd4   Number         4  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x00001bd8   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x00001bd9   Thumb Code   476  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x00001da0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x00001da4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x00001da8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x00001dac   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x00001db0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x00001db4   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    svcRtxThreadYield                        0x00001db5   Thumb Code    56  rtx_thread.o(.text.svcRtxThreadYield)
    __arm_cp.47_0                            0x00001de8   Number         4  rtx_thread.o(.text.svcRtxThreadYield)
    i.EINT3_IRQHandler                       0x00001dec   Section        0  pushbutton.o(i.EINT3_IRQHandler)
    i.GLCD_Bitmap                            0x00001e0c   Section        0  glcd_spi_lpc1700.o(i.GLCD_Bitmap)
    i.GLCD_Clear                             0x00001e5e   Section        0  glcd_spi_lpc1700.o(i.GLCD_Clear)
    i.GLCD_DisplayChar                       0x00001e88   Section        0  glcd_spi_lpc1700.o(i.GLCD_DisplayChar)
    i.GLCD_DisplayString                     0x00001ee4   Section        0  glcd_spi_lpc1700.o(i.GLCD_DisplayString)
    i.GLCD_DrawChar                          0x00001f0c   Section        0  glcd_spi_lpc1700.o(i.GLCD_DrawChar)
    i.GLCD_Init                              0x00001fa8   Section        0  glcd_spi_lpc1700.o(i.GLCD_Init)
    i.GLCD_SetWindow                         0x00002590   Section        0  glcd_spi_lpc1700.o(i.GLCD_SetWindow)
    i.GLCD_WindowMax                         0x0000263c   Section        0  glcd_spi_lpc1700.o(i.GLCD_WindowMax)
    i.GUI_Level_1                            0x00002650   Section        0  gui.o(i.GUI_Level_1)
    i.GUI_Level_Menu                         0x00002680   Section        0  gui.o(i.GUI_Level_Menu)
    i.GUI_Start                              0x0000278c   Section        0  gui.o(i.GUI_Start)
    i.GUI_Task                               0x000027fc   Section        0  gui.o(i.GUI_Task)
    i.Joy_Task                               0x000028a8   Section        0  joy.o(i.Joy_Task)
    i.Joy_init                               0x00002938   Section        0  joy.o(i.Joy_init)
    i.Pot_Task                               0x00002958   Section        0  pot.o(i.Pot_Task)
    i.SystemInit                             0x000029dc   Section        0  system_lpc17xx.o(i.SystemInit)
    i.UART0_IRQHandler                       0x00002b1c   Section        0  uart.o(i.UART0_IRQHandler)
    i.UART1_IRQHandler                       0x00002b84   Section        0  uart.o(i.UART1_IRQHandler)
    i.UARTSendChar                           0x00002bf4   Section        0  uart.o(i.UARTSendChar)
    i.__ARM_fpclassify                       0x00002c2c   Section        0  fpclassify.o(i.__ARM_fpclassify)
    i.__ieee754_rem_pio2                     0x00002c54   Section        0  rred.o(i.__ieee754_rem_pio2)
    i.__kernel_cos                           0x00002fdc   Section        0  cos_i.o(i.__kernel_cos)
    i.__kernel_poly                          0x000030d8   Section        0  poly.o(i.__kernel_poly)
    i.__kernel_sin                           0x00003184   Section        0  sin_i.o(i.__kernel_sin)
    i.__mathlib_dbl_infnan                   0x00003270   Section        0  dunder.o(i.__mathlib_dbl_infnan)
    i.__mathlib_dbl_invalid                  0x00003276   Section        0  dunder.o(i.__mathlib_dbl_invalid)
    i.__mathlib_dbl_underflow                0x00003284   Section        0  dunder.o(i.__mathlib_dbl_underflow)
    i.__user_perthread_libspace              0x00003294   Section        0  rtx_lib.o(i.__user_perthread_libspace)
    i._mutex_acquire                         0x000032ec   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x000032ed   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x00003302   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x00003303   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x0000330e   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x0000330f   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x00003330   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x00003331   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x00003342   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i._sys_exit                              0x0000334a   Section        0  retarget.o(i._sys_exit)
    i._ttywrch                               0x0000334e   Section        0  retarget.o(i._ttywrch)
    i.animate_enemy                          0x0000335c   Section        0  gui.o(i.animate_enemy)
    i.animate_player                         0x000033b0   Section        0  gui.o(i.animate_player)
    i.delay                                  0x0000342c   Section        0  glcd_spi_lpc1700.o(i.delay)
    delay                                    0x0000342d   Thumb Code    14  glcd_spi_lpc1700.o(i.delay)
    i.enemy_init                             0x0000343c   Section        0  enemy.o(i.enemy_init)
    i.enemy_path                             0x000034cc   Section        0  enemy.o(i.enemy_path)
    i.enemy_task                             0x00003590   Section        0  enemy.o(i.enemy_task)
    i.init                                   0x00003644   Section        0  main.o(i.init)
    i.ladder_avaliable                       0x00003660   Section        0  player.o(i.ladder_avaliable)
    i.legalize                               0x00003680   Section        0  player.o(i.legalize)
    i.main                                   0x000036bc   Section        0  main.o(i.main)
    i.osRtxErrorNotify                       0x0000373c   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x0000375c   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.os_kernel_is_active                    0x00003760   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x00003761   Thumb Code    28  rtx_lib.o(i.os_kernel_is_active)
    i.player_init                            0x00003780   Section        0  player.o(i.player_init)
    i.player_task                            0x000037d8   Section        0  player.o(i.player_task)
    i.rd_id_man                              0x000038c4   Section        0  glcd_spi_lpc1700.o(i.rd_id_man)
    rd_id_man                                0x000038c5   Thumb Code   132  glcd_spi_lpc1700.o(i.rd_id_man)
    i.rd_reg                                 0x00003950   Section        0  glcd_spi_lpc1700.o(i.rd_reg)
    rd_reg                                   0x00003951   Thumb Code    66  glcd_spi_lpc1700.o(i.rd_reg)
    i.sendchar                               0x00003998   Section        0  retarget.o(i.sendchar)
    i.setup_INT0                             0x000039c4   Section        0  pushbutton.o(i.setup_INT0)
    i.sin                                    0x000039f8   Section        0  sin.o(i.sin)
    i.spi_tran                               0x00003a98   Section        0  glcd_spi_lpc1700.o(i.spi_tran)
    spi_tran                                 0x00003a99   Thumb Code    28  glcd_spi_lpc1700.o(i.spi_tran)
    i.spi_tran_man                           0x00003ab8   Section        0  glcd_spi_lpc1700.o(i.spi_tran_man)
    spi_tran_man                             0x00003ab9   Thumb Code   124  glcd_spi_lpc1700.o(i.spi_tran_man)
    i.wr_cmd                                 0x00003b38   Section        0  glcd_spi_lpc1700.o(i.wr_cmd)
    wr_cmd                                   0x00003b39   Thumb Code    36  glcd_spi_lpc1700.o(i.wr_cmd)
    i.wr_dat                                 0x00003b60   Section        0  glcd_spi_lpc1700.o(i.wr_dat)
    wr_dat                                   0x00003b61   Thumb Code    36  glcd_spi_lpc1700.o(i.wr_dat)
    i.wr_dat_only                            0x00003b88   Section        0  glcd_spi_lpc1700.o(i.wr_dat_only)
    wr_dat_only                              0x00003b89   Thumb Code    18  glcd_spi_lpc1700.o(i.wr_dat_only)
    i.wr_dat_start                           0x00003b9c   Section        0  glcd_spi_lpc1700.o(i.wr_dat_start)
    wr_dat_start                             0x00003b9d   Thumb Code    16  glcd_spi_lpc1700.o(i.wr_dat_start)
    i.wr_dat_stop                            0x00003bb0   Section        0  glcd_spi_lpc1700.o(i.wr_dat_stop)
    wr_dat_stop                              0x00003bb1   Thumb Code     8  glcd_spi_lpc1700.o(i.wr_dat_stop)
    i.wr_reg                                 0x00003bbc   Section        0  glcd_spi_lpc1700.o(i.wr_reg)
    wr_reg                                   0x00003bbd   Thumb Code    20  glcd_spi_lpc1700.o(i.wr_reg)
    x$fpl$dadd                               0x00003bd0   Section      336  daddsub_clz.o(x$fpl$dadd)
    _dadd1                                   0x00003be1   Thumb Code     0  daddsub_clz.o(x$fpl$dadd)
    x$fpl$dcheck1                            0x00003d20   Section       16  dcheck1.o(x$fpl$dcheck1)
    x$fpl$ddiv                               0x00003d30   Section      688  ddiv.o(x$fpl$ddiv)
    ddiv_entry                               0x00003d37   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    x$fpl$dfix                               0x00003fe0   Section       94  dfix.o(x$fpl$dfix)
    x$fpl$dflt                               0x0000403e   Section       46  dflt_clz.o(x$fpl$dflt)
    x$fpl$dfltu                              0x0000406c   Section       38  dflt_clz.o(x$fpl$dfltu)
    x$fpl$dmul                               0x00004094   Section      340  dmul.o(x$fpl$dmul)
    x$fpl$dnaninf                            0x000041e8   Section      156  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dretinf                            0x00004284   Section       12  dretinf.o(x$fpl$dretinf)
    x$fpl$drsb                               0x00004290   Section       22  daddsub_clz.o(x$fpl$drsb)
    x$fpl$dsub                               0x000042a8   Section      468  daddsub_clz.o(x$fpl$dsub)
    _dsub1                                   0x000042b9   Thumb Code     0  daddsub_clz.o(x$fpl$dsub)
    x$fpl$retnan                             0x0000447c   Section      100  retnan.o(x$fpl$retnan)
    x$fpl$scalbn                             0x000044e0   Section       92  scalbn.o(x$fpl$scalbn)
    x$fpl$trapveneer                         0x0000453c   Section       48  trapv.o(x$fpl$trapveneer)
    .constdata                               0x0000456c   Section     6272  glcd_spi_lpc1700.o(.constdata)
    x$fpl$usenofp                            0x0000456c   Section        0  usenofp.o(x$fpl$usenofp)
    .constdata                               0x00005dec   Section     1801  bitmaps.o(.constdata)
    .constdata                               0x000064f8   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x000064f8   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x0000651c   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x00006540   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x0000655c   Section        1  irq_cm3.o(.constdata)
    .constdata                               0x00006560   Section       48  cos_i.o(.constdata)
    C                                        0x00006560   Data          48  cos_i.o(.constdata)
    .constdata                               0x00006590   Section      200  rred.o(.constdata)
    pio2s                                    0x00006590   Data          48  rred.o(.constdata)
    twooverpi                                0x000065c0   Data         152  rred.o(.constdata)
    .constdata                               0x00006658   Section       40  sin_i.o(.constdata)
    S                                        0x00006658   Data          40  sin_i.o(.constdata)
    .rodata                                  0x00006680   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x00006680   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x000066e8   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x000066e8   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x10000000   Section     4160  rtx_lib.o(.bss.os)
    os_mem                                   0x10000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x10001000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.libspace                         0x10001040   Section      496  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x10001040   Data         480  rtx_lib.o(.bss.os.libspace)
    os_libspace_id                           0x10001220   Data          16  rtx_lib.o(.bss.os.libspace)
    .bss.os.msgqueue.cb                      0x10001230   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x10001230   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x10001264   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x10001264   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x100012b4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x100012b4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x100012f8   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x10001340   Section      512  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x10001340   Data         256  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x10001440   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x10001540   Section        5  glcd_spi_lpc1700.o(.data)
    Color                                    0x10001540   Data           4  glcd_spi_lpc1700.o(.data)
    Himax                                    0x10001544   Data           1  glcd_spi_lpc1700.o(.data)
    .data                                    0x10001548   Section       32  uart.o(.data)
    .data                                    0x10001568   Section       20  main.o(.data)
    .data                                    0x1000157c   Section        9  gui.o(.data)
    .data                                    0x10001588   Section        8  joy.o(.data)
    .data                                    0x10001590   Section        8  pot.o(.data)
    .data                                    0x10001598   Section        1  pushbutton.o(.data)
    .data                                    0x1000159c   Section        8  enemy.o(.data)
    .data                                    0x100015a4   Section        8  player.o(.data)
    .data                                    0x100015ac   Section        5  rtx_lib.o(.data)
    os_kernel_active                         0x100015b0   Data           1  rtx_lib.o(.data)
    .data                                    0x100015b4   Section        4  system_lpc17xx.o(.data)
    .bss                                     0x1000165c   Section      128  uart.o(.bss)
    .bss                                     0x100016dc   Section       12  enemy.o(.bss)
    .bss                                     0x100016e8   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x10001748   Section        0  os_systick.o(.bss.PendST)
    PendST                                   0x10001748   Data           1  os_systick.o(.bss.PendST)
    HEAP                                     0x10001750   Section     8192  startup_lpc17xx.o(HEAP)
    Heap_Mem                                 0x10001750   Data        8192  startup_lpc17xx.o(HEAP)
    STACK                                    0x10003750   Section     8192  startup_lpc17xx.o(STACK)
    Stack_Mem                                0x10003750   Data        8192  startup_lpc17xx.o(STACK)
    __initial_sp                             0x10005750   Data           0  startup_lpc17xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEX$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_lpc17xx.o(RESET)
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __main                                   0x000000cd   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000d5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000d5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000d5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000e3   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x00000109   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x00000109   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x00000145   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000161   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x00000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_2                     0x00000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000005)
    __rt_lib_init_preinit_1                  0x00000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_alloca_1                   0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_rand_1                     0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x0000016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x0000016d   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000016f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000016f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_2                 0x0000016f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    __rt_lib_shutdown_signal_1               0x0000016f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0000016f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0000016f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_lib_shutdown_heap_1                 0x00000173   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000173   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_entry                               0x00000175   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000175   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000175   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0000017b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x00000183   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x00000187   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000187   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000018f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000191   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000191   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000195   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0000019d   Thumb Code     8  startup_lpc17xx.o(.text)
    _maybe_terminate_alloc                   0x0000019d   Thumb Code     0  maybetermalloc2.o(.emb_text)
    NMI_Handler                              0x000001a5   Thumb Code     2  startup_lpc17xx.o(.text)
    HardFault_Handler                        0x000001a7   Thumb Code     2  startup_lpc17xx.o(.text)
    MemManage_Handler                        0x000001a9   Thumb Code     2  startup_lpc17xx.o(.text)
    BusFault_Handler                         0x000001ab   Thumb Code     2  startup_lpc17xx.o(.text)
    UsageFault_Handler                       0x000001ad   Thumb Code     2  startup_lpc17xx.o(.text)
    DebugMon_Handler                         0x000001b1   Thumb Code     2  startup_lpc17xx.o(.text)
    ADC_IRQHandler                           0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    BOD_IRQHandler                           0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    CANActivity_IRQHandler                   0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    CAN_IRQHandler                           0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    DMA_IRQHandler                           0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT0_IRQHandler                         0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT1_IRQHandler                         0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT2_IRQHandler                         0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    ENET_IRQHandler                          0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C0_IRQHandler                          0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C1_IRQHandler                          0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C2_IRQHandler                          0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    I2S_IRQHandler                           0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    MCPWM_IRQHandler                         0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    PLL0_IRQHandler                          0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    PLL1_IRQHandler                          0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    PWM1_IRQHandler                          0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    QEI_IRQHandler                           0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    RIT_IRQHandler                           0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    RTC_IRQHandler                           0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    SPI_IRQHandler                           0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    SSP0_IRQHandler                          0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    SSP1_IRQHandler                          0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER0_IRQHandler                        0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER1_IRQHandler                        0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER2_IRQHandler                        0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER3_IRQHandler                        0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    UART2_IRQHandler                         0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    UART3_IRQHandler                         0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    USBActivity_IRQHandler                   0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    USB_IRQHandler                           0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    WDT_IRQHandler                           0x000001b7   Thumb Code     0  startup_lpc17xx.o(.text)
    __user_initial_stackheap                 0x000001b9   Thumb Code     0  startup_lpc17xx.o(.text)
    SVC_Handler                              0x000001dd   Thumb Code   108  irq_cm3.o(.text)
    PendSV_Handler                           0x00000249   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x00000259   Thumb Code    16  irq_cm3.o(.text)
    _free_internal                           0x00000271   Thumb Code    98  h1_free_mt.o(.text)
    free                                     0x000002d3   Thumb Code    20  h1_free_mt.o(.text)
    __use_two_region_memory                  0x000002e7   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x000002e9   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x000002eb   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_descriptor                     0x000002ed   Thumb Code    10  rt_heap_descriptor_twolibspace.o(.text)
    __use_no_heap                            0x000002f7   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x000002f9   Thumb Code     2  hguard.o(.text)
    osRtxKernelPreInit                       0x000002fb   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    _malloc_internal                         0x00000309   Thumb Code   130  h1_alloc_mt.o(.text)
    malloc                                   0x0000038b   Thumb Code    20  h1_alloc_mt.o(.text)
    __aeabi_memcpy                           0x0000039f   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x0000039f   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x00000405   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr                           0x00000429   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x00000429   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x0000042d   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x0000046d   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0000046d   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0000046d   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x00000471   Thumb Code     0  rt_memclr_w.o(.text)
    _terminate_user_alloc                    0x000004bb   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x000004bd   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x000004bf   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x000004e1   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x000004e7   Thumb Code    94  init_alloc.o(.text)
    __Heap_Initialize                        0x00000545   Thumb Code    14  h1_init_mt.o(.text)
    __Heap_DescSize                          0x00000553   Thumb Code     4  h1_init_mt.o(.text)
    __read_errno                             0x00000557   Thumb Code    10  _rserrno.o(.text)
    __set_errno                              0x00000561   Thumb Code    12  _rserrno.o(.text)
    __aeabi_memcpy4                          0x0000056d   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0000056d   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0000056d   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x000005b5   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_libspace                          0x000005d1   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x000005d1   Thumb Code     0  libspace.o(.text)
    __aeabi_errno_addr                       0x000005d9   Thumb Code     4  rt_errno_addr_twolibspace.o(.text)
    __errno$twolibspace                      0x000005d9   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __rt_errno_addr$twolibspace              0x000005d9   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __Heap_ProvideMemory                     0x000005dd   Thumb Code    62  h1_extend_mt.o(.text)
    __rt_SIGRTMEM                            0x0000061b   Thumb Code    14  defsig_rtmem_outer.o(.text)
    __user_setup_stackheap                   0x00000629   Thumb Code    74  sys_stackheap_outer.o(.text)
    _terminate_alloc                         0x00000673   Thumb Code    16  term_alloc.o(.text)
    exit                                     0x00000683   Thumb Code    18  exit.o(.text)
    __sig_exit                               0x00000695   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGRTMEM_inner                      0x000006a1   Thumb Code    22  defsig_rtmem_inner.o(.text)
    __Heap_Finalize                          0x000006f1   Thumb Code    10  h1_final_mt.o(.text)
    __default_signal_display                 0x000006fb   Thumb Code    50  defsig_general.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x000007f1   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x000007fd   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x00000829   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x00000831   Thumb Code    64  os_systick.o(.text.OS_Tick_Setup)
    osKernelGetState                         0x0000092d   Thumb Code    48  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x0000095d   Thumb Code    44  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x00000989   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x000009ad   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x00000a19   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x00000a3d   Thumb Code   120  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x00000ab5   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x00000ad9   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x00000afd   Thumb Code    36  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x00000b21   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxMemoryAlloc                         0x00000b45   Thumb Code   124  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00000bc1   Thumb Code    82  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x00000c13   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x00000c49   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x00000c81   Thumb Code    72  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x00000cc9   Thumb Code    84  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x00000dd7   Thumb Code    68  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x00000e1d   Thumb Code   140  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x00000ea9   Thumb Code   116  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x00001029   Thumb Code    52  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x0000105d   Thumb Code    92  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x0000110d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x00001121   Thumb Code    42  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x0000114b   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x0000115f   Thumb Code    40  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x000011b1   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x000011c5   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x000011cd   Thumb Code    40  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x000011f5   Thumb Code    64  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x00001235   Thumb Code    16  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00001245   Thumb Code    60  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x00001281   Thumb Code    36  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x000012a5   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x00001315   Thumb Code    60  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x000013a9   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadGetId                            0x000013b5   Thumb Code    40  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x000013dd   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    osThreadYield                            0x00001401   Thumb Code    36  rtx_thread.o(.text.osThreadYield)
    EINT3_IRQHandler                         0x00001ded   Thumb Code    24  pushbutton.o(i.EINT3_IRQHandler)
    GLCD_Bitmap                              0x00001e0d   Thumb Code    82  glcd_spi_lpc1700.o(i.GLCD_Bitmap)
    GLCD_Clear                               0x00001e5f   Thumb Code    42  glcd_spi_lpc1700.o(i.GLCD_Clear)
    GLCD_DisplayChar                         0x00001e89   Thumb Code    84  glcd_spi_lpc1700.o(i.GLCD_DisplayChar)
    GLCD_DisplayString                       0x00001ee5   Thumb Code    40  glcd_spi_lpc1700.o(i.GLCD_DisplayString)
    GLCD_DrawChar                            0x00001f0d   Thumb Code   150  glcd_spi_lpc1700.o(i.GLCD_DrawChar)
    GLCD_Init                                0x00001fa9   Thumb Code  1506  glcd_spi_lpc1700.o(i.GLCD_Init)
    GLCD_SetWindow                           0x00002591   Thumb Code   168  glcd_spi_lpc1700.o(i.GLCD_SetWindow)
    GLCD_WindowMax                           0x0000263d   Thumb Code    18  glcd_spi_lpc1700.o(i.GLCD_WindowMax)
    GUI_Level_1                              0x00002651   Thumb Code    38  gui.o(i.GUI_Level_1)
    GUI_Level_Menu                           0x00002681   Thumb Code   222  gui.o(i.GUI_Level_Menu)
    GUI_Start                                0x0000278d   Thumb Code    76  gui.o(i.GUI_Start)
    GUI_Task                                 0x000027fd   Thumb Code    90  gui.o(i.GUI_Task)
    Joy_Task                                 0x000028a9   Thumb Code   130  joy.o(i.Joy_Task)
    Joy_init                                 0x00002939   Thumb Code    24  joy.o(i.Joy_init)
    Pot_Task                                 0x00002959   Thumb Code   108  pot.o(i.Pot_Task)
    SystemInit                               0x000029dd   Thumb Code   302  system_lpc17xx.o(i.SystemInit)
    UART0_IRQHandler                         0x00002b1d   Thumb Code    88  uart.o(i.UART0_IRQHandler)
    UART1_IRQHandler                         0x00002b85   Thumb Code    90  uart.o(i.UART1_IRQHandler)
    UARTSendChar                             0x00002bf5   Thumb Code    52  uart.o(i.UARTSendChar)
    __ARM_fpclassify                         0x00002c2d   Thumb Code    40  fpclassify.o(i.__ARM_fpclassify)
    __ieee754_rem_pio2                       0x00002c55   Thumb Code   828  rred.o(i.__ieee754_rem_pio2)
    __kernel_cos                             0x00002fdd   Thumb Code   230  cos_i.o(i.__kernel_cos)
    __kernel_poly                            0x000030d9   Thumb Code   170  poly.o(i.__kernel_poly)
    __kernel_sin                             0x00003185   Thumb Code   224  sin_i.o(i.__kernel_sin)
    __mathlib_dbl_infnan                     0x00003271   Thumb Code     6  dunder.o(i.__mathlib_dbl_infnan)
    __mathlib_dbl_invalid                    0x00003277   Thumb Code    12  dunder.o(i.__mathlib_dbl_invalid)
    __mathlib_dbl_underflow                  0x00003285   Thumb Code    10  dunder.o(i.__mathlib_dbl_underflow)
    __user_perthread_libspace                0x00003295   Thumb Code    80  rtx_lib.o(i.__user_perthread_libspace)
    _mutex_acquire                           0x000032ed   Thumb Code    22  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x00003303   Thumb Code    12  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x0000330f   Thumb Code    34  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x00003331   Thumb Code    18  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x00003343   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    _sys_exit                                0x0000334b   Thumb Code     4  retarget.o(i._sys_exit)
    _ttywrch                                 0x0000334f   Thumb Code    12  retarget.o(i._ttywrch)
    animate_enemy                            0x0000335d   Thumb Code    74  gui.o(i.animate_enemy)
    animate_player                           0x000033b1   Thumb Code   112  gui.o(i.animate_player)
    enemy_init                               0x0000343d   Thumb Code   130  enemy.o(i.enemy_init)
    enemy_path                               0x000034cd   Thumb Code   184  enemy.o(i.enemy_path)
    enemy_task                               0x00003591   Thumb Code   160  enemy.o(i.enemy_task)
    init                                     0x00003645   Thumb Code    28  main.o(i.init)
    ladder_avaliable                         0x00003661   Thumb Code    26  player.o(i.ladder_avaliable)
    legalize                                 0x00003681   Thumb Code    58  player.o(i.legalize)
    main                                     0x000036bd   Thumb Code    86  main.o(i.main)
    osRtxErrorNotify                         0x0000373d   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x0000375d   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    player_init                              0x00003781   Thumb Code    80  player.o(i.player_init)
    player_task                              0x000037d9   Thumb Code   214  player.o(i.player_task)
    sendchar                                 0x00003999   Thumb Code    42  retarget.o(i.sendchar)
    setup_INT0                               0x000039c5   Thumb Code    46  pushbutton.o(i.setup_INT0)
    sin                                      0x000039f9   Thumb Code   150  sin.o(i.sin)
    __aeabi_dadd                             0x00003bd1   Thumb Code     0  daddsub_clz.o(x$fpl$dadd)
    _dadd                                    0x00003bd1   Thumb Code   332  daddsub_clz.o(x$fpl$dadd)
    __fpl_dcheck_NaN1                        0x00003d21   Thumb Code    10  dcheck1.o(x$fpl$dcheck1)
    __aeabi_ddiv                             0x00003d31   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    _ddiv                                    0x00003d31   Thumb Code   552  ddiv.o(x$fpl$ddiv)
    __aeabi_d2iz                             0x00003fe1   Thumb Code     0  dfix.o(x$fpl$dfix)
    _dfix                                    0x00003fe1   Thumb Code    94  dfix.o(x$fpl$dfix)
    __aeabi_i2d                              0x0000403f   Thumb Code     0  dflt_clz.o(x$fpl$dflt)
    _dflt                                    0x0000403f   Thumb Code    46  dflt_clz.o(x$fpl$dflt)
    __aeabi_ui2d                             0x0000406d   Thumb Code     0  dflt_clz.o(x$fpl$dfltu)
    _dfltu                                   0x0000406d   Thumb Code    38  dflt_clz.o(x$fpl$dfltu)
    __aeabi_dmul                             0x00004095   Thumb Code     0  dmul.o(x$fpl$dmul)
    _dmul                                    0x00004095   Thumb Code   332  dmul.o(x$fpl$dmul)
    __fpl_dnaninf                            0x000041e9   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    __fpl_dretinf                            0x00004285   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    __aeabi_drsub                            0x00004291   Thumb Code     0  daddsub_clz.o(x$fpl$drsb)
    _drsb                                    0x00004291   Thumb Code    22  daddsub_clz.o(x$fpl$drsb)
    __aeabi_dsub                             0x000042a9   Thumb Code     0  daddsub_clz.o(x$fpl$dsub)
    _dsub                                    0x000042a9   Thumb Code   464  daddsub_clz.o(x$fpl$dsub)
    __fpl_return_NaN                         0x0000447d   Thumb Code   100  retnan.o(x$fpl$retnan)
    __ARM_scalbn                             0x000044e1   Thumb Code    92  scalbn.o(x$fpl$scalbn)
    __fpl_cmpreturn                          0x0000453d   Thumb Code    48  trapv.o(x$fpl$trapveneer)
    Font_6x8_h                               0x0000456c   Data         896  glcd_spi_lpc1700.o(.constdata)
    __I$use$fp                               0x0000456c   Number         0  usenofp.o(x$fpl$usenofp)
    Font_16x24_h                             0x000048ec   Data        5376  glcd_spi_lpc1700.o(.constdata)
    enemy_map                                0x00005dec   Data        1801  bitmaps.o(.constdata)
    osRtxUserSVC                             0x00006558   Data           4  rtx_lib.o(.constdata)
    irqRtxLib                                0x0000655c   Data           1  irq_cm3.o(.constdata)
    osRtxConfig                              0x00006680   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x000066f4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00006714   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x10001230   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x10001264   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x100012b4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x1000133c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    ITM_RxBuffer                             0x10001548   Data           4  uart.o(.data)
    UART0Status                              0x1000154c   Data           4  uart.o(.data)
    UART1Status                              0x10001550   Data           4  uart.o(.data)
    UART0TxEmpty                             0x10001554   Data           1  uart.o(.data)
    UART1TxEmpty                             0x10001555   Data           1  uart.o(.data)
    UART0Count                               0x10001558   Data           4  uart.o(.data)
    UART1Count                               0x1000155c   Data           4  uart.o(.data)
    RcvLock0                                 0x10001560   Data           1  uart.o(.data)
    SndLock0                                 0x10001561   Data           1  uart.o(.data)
    RcvLock1                                 0x10001562   Data           1  uart.o(.data)
    SndLock1                                 0x10001563   Data           1  uart.o(.data)
    i                                        0x10001564   Data           4  uart.o(.data)
    GUI_Thread                               0x10001568   Data           4  main.o(.data)
    Pot_Thread                               0x1000156c   Data           4  main.o(.data)
    Joy_Thread                               0x10001570   Data           4  main.o(.data)
    Enemy_Thread                             0x10001574   Data           4  main.o(.data)
    Player_Thread                            0x10001578   Data           4  main.o(.data)
    sel_lev                                  0x1000157c   Data           1  gui.o(.data)
    game_state_id                            0x10001580   Data           4  gui.o(.data)
    game_state                               0x10001584   Data           1  gui.o(.data)
    joy_in                                   0x10001588   Data           4  joy.o(.data)
    joy_val_id                               0x1000158c   Data           4  joy.o(.data)
    pot_val                                  0x10001590   Data           4  pot.o(.data)
    pot_val_id                               0x10001594   Data           4  pot.o(.data)
    button_pushed                            0x10001598   Data           1  pushbutton.o(.data)
    enemy_loc_id                             0x1000159c   Data           4  enemy.o(.data)
    enemy_time                               0x100015a0   Data           4  enemy.o(.data)
    player_info                              0x100015a4   Data           4  player.o(.data)
    player_loc_id                            0x100015a8   Data           4  player.o(.data)
    irqRtxLibRef                             0x100015ac   Data           4  rtx_lib.o(.data)
    SystemCoreClock                          0x100015b4   Data           4  system_lpc17xx.o(.data)
    osRtxInfo                                0x100015b8   Data         164  rtx_kernel.o(.data.os)
    UART0Buffer                              0x1000165c   Data          64  uart.o(.bss)
    UART1Buffer                              0x1000169c   Data          64  uart.o(.bss)
    enemies                                  0x100016dc   Data          12  enemy.o(.bss)
    __libspace_start                         0x100016e8   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x10001748   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000019d

  Load Region LR_1 (Base: 0x00000000, Size: 0x00007d70, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x0000675c])

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00006714, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000cc   Data   RO         1014    RESET               startup_lpc17xx.o
    0x000000cc   0x000000cc   0x00000008   Code   RO         1579  * !!!main             c_w.l(__main.o)
    0x000000d4   0x000000d4   0x00000034   Code   RO         1872    !!!scatter          c_w.l(__scatter.o)
    0x00000108   0x00000108   0x0000003a   Code   RO         1870    !!dczerorl          c_w.l(__dczerorl.o)
    0x00000142   0x00000142   0x00000002   PAD
    0x00000144   0x00000144   0x0000001c   Code   RO         1874    !!handler_zi        c_w.l(__scatter_zi.o)
    0x00000160   0x00000160   0x00000002   Code   RO         1807    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x00000162   0x00000162   0x00000000   Code   RO         1646    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x00000162   0x00000162   0x00000000   Code   RO         1648    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000162   0x00000162   0x00000008   Code   RO         1649    .ARM.Collect$$libinit$$00000005  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1651    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1653    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1655    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1658    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1660    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1662    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1664    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1666    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1668    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1670    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1672    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1674    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1676    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1678    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1682    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1684    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1686    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO         1688    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0000016a   0x0000016a   0x00000002   Code   RO         1689    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x0000016c   0x0000016c   0x00000002   Code   RO         1867    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000016e   0x0000016e   0x00000000   Code   RO         1823    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000016e   0x0000016e   0x00000000   Code   RO         1825    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000016e   0x0000016e   0x00000000   Code   RO         1828    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0000016e   0x0000016e   0x00000000   Code   RO         1831    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0000016e   0x0000016e   0x00000000   Code   RO         1833    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000016e   0x0000016e   0x00000004   Code   RO         1834    .ARM.Collect$$libshutdown$$0000000D  c_w.l(libshutdown2.o)
    0x00000172   0x00000172   0x00000000   Code   RO         1836    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x00000172   0x00000172   0x00000002   Code   RO         1837    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x00000174   0x00000174   0x00000000   Code   RO         1607    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x00000174   0x00000174   0x00000000   Code   RO         1729    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x00000174   0x00000174   0x00000006   Code   RO         1741    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0000017a   0x0000017a   0x00000008   Code   RO         1730    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x00000182   0x00000182   0x00000004   Code   RO         1732    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000186   0x00000186   0x00000000   Code   RO         1734    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000186   0x00000186   0x00000008   Code   RO         1735    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0000018e   0x0000018e   0x00000002   Code   RO         1810    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000190   0x00000190   0x00000000   Code   RO         1841    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000190   0x00000190   0x00000004   Code   RO         1842    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000194   0x00000194   0x00000006   Code   RO         1843    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000019a   0x0000019a   0x00000002   PAD
    0x0000019c   0x0000019c   0x00000000   Code   RO         1755    .emb_text           c_w.l(maybetermalloc2.o)
    0x0000019c   0x0000019c   0x00000040   Code   RO         1016  * .text               startup_lpc17xx.o
    0x000001dc   0x000001dc   0x00000094   Code   RO         1292    .text               RTX_CM3.lib(irq_cm3.o)
    0x00000270   0x00000270   0x00000076   Code   RO         1517    .text               c_w.l(h1_free_mt.o)
    0x000002e6   0x000002e6   0x00000006   Code   RO         1577    .text               c_w.l(heapauxi.o)
    0x000002ec   0x000002ec   0x0000000a   Code   RO         1617    .text               c_w.l(rt_heap_descriptor_twolibspace.o)
    0x000002f6   0x000002f6   0x00000004   Code   RO         1619    .text               c_w.l(hguard.o)
    0x000002fa   0x000002fa   0x00000002   Code   RO         1059    .text.osRtxKernelPreInit  RTX_CM3.lib(rtx_kernel.o)
    0x000002fc   0x000002fc   0x00000004   Code   RO         1015    .ARM.__at_0x02FC    startup_lpc17xx.o
    0x00000300   0x00000300   0x0000009e   Code   RO         1515    .text               c_w.l(h1_alloc_mt.o)
    0x0000039e   0x0000039e   0x0000008a   Code   RO         1571    .text               c_w.l(rt_memcpy_v6.o)
    0x00000428   0x00000428   0x00000044   Code   RO         1573    .text               c_w.l(rt_memclr.o)
    0x0000046c   0x0000046c   0x0000004e   Code   RO         1575    .text               c_w.l(rt_memclr_w.o)
    0x000004ba   0x000004ba   0x0000008a   Code   RO         1621    .text               c_w.l(init_alloc.o)
    0x00000544   0x00000544   0x00000012   Code   RO         1627    .text               c_w.l(h1_init_mt.o)
    0x00000556   0x00000556   0x00000016   Code   RO         1639    .text               c_w.l(_rserrno.o)
    0x0000056c   0x0000056c   0x00000064   Code   RO         1641    .text               c_w.l(rt_memcpy_w.o)
    0x000005d0   0x000005d0   0x00000008   Code   RO         1725    .text               c_w.l(libspace.o)
    0x000005d8   0x000005d8   0x00000004   Code   RO         1750    .text               c_w.l(rt_errno_addr_twolibspace.o)
    0x000005dc   0x000005dc   0x0000003e   Code   RO         1758    .text               c_w.l(h1_extend_mt.o)
    0x0000061a   0x0000061a   0x0000000e   Code   RO         1760    .text               c_w.l(defsig_rtmem_outer.o)
    0x00000628   0x00000628   0x0000004a   Code   RO         1784    .text               c_w.l(sys_stackheap_outer.o)
    0x00000672   0x00000672   0x00000010   Code   RO         1788    .text               c_w.l(term_alloc.o)
    0x00000682   0x00000682   0x00000012   Code   RO         1790    .text               c_w.l(exit.o)
    0x00000694   0x00000694   0x0000000a   Code   RO         1792    .text               c_w.l(defsig_exit.o)
    0x0000069e   0x0000069e   0x00000002   PAD
    0x000006a0   0x000006a0   0x00000050   Code   RO         1798    .text               c_w.l(defsig_rtmem_inner.o)
    0x000006f0   0x000006f0   0x0000000a   Code   RO         1814    .text               c_w.l(h1_final_mt.o)
    0x000006fa   0x000006fa   0x00000032   Code   RO         1818    .text               c_w.l(defsig_general.o)
    0x0000072c   0x0000072c   0x00000044   Code   RO         1489    .text.MessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000770   0x00000770   0x00000062   Code   RO         1483    .text.MessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x000007d2   0x000007d2   0x0000001c   Code   RO         1481    .text.MessageQueueRemove  RTX_CM3.lib(rtx_msgqueue.o)
    0x000007ee   0x000007ee   0x00000002   PAD
    0x000007f0   0x000007f0   0x0000000c   Code   RO         1427    .text.OS_Tick_AcknowledgeIRQ  RTX_CM3.lib(os_systick.o)
    0x000007fc   0x000007fc   0x0000002c   Code   RO         1423    .text.OS_Tick_Enable  RTX_CM3.lib(os_systick.o)
    0x00000828   0x00000828   0x00000006   Code   RO         1429    .text.OS_Tick_GetIRQn  RTX_CM3.lib(os_systick.o)
    0x0000082e   0x0000082e   0x00000002   PAD
    0x00000830   0x00000830   0x00000040   Code   RO         1421    .text.OS_Tick_Setup  RTX_CM3.lib(os_systick.o)
    0x00000870   0x00000870   0x0000006c   Code   RO         1204    .text.ThreadFlagsCheck  RTX_CM3.lib(rtx_thread.o)
    0x000008dc   0x000008dc   0x00000050   Code   RO         1313    .text.TimerInsert   RTX_CM3.lib(rtx_timer.o)
    0x0000092c   0x0000092c   0x00000030   Code   RO         1067    .text.osKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x0000095c   0x0000095c   0x0000002c   Code   RO         1061    .text.osKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x00000988   0x00000988   0x00000024   Code   RO         1071    .text.osKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x000009ac   0x000009ac   0x0000006c   Code   RO         1455    .text.osMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000a18   0x00000a18   0x00000024   Code   RO         1449    .text.osMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000a3c   0x00000a3c   0x00000078   Code   RO         1453    .text.osMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000ab4   0x00000ab4   0x00000024   Code   RO         1263    .text.osMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x00000ad8   0x00000ad8   0x00000024   Code   RO         1269    .text.osMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x00000afc   0x00000afc   0x00000024   Code   RO         1259    .text.osMutexNew    RTX_CM3.lib(rtx_mutex.o)
    0x00000b20   0x00000b20   0x00000024   Code   RO         1265    .text.osMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x00000b44   0x00000b44   0x0000007c   Code   RO         1340    .text.osRtxMemoryAlloc  RTX_CM3.lib(rtx_memory.o)
    0x00000bc0   0x00000bc0   0x00000052   Code   RO         1342    .text.osRtxMemoryFree  RTX_CM3.lib(rtx_memory.o)
    0x00000c12   0x00000c12   0x00000036   Code   RO         1338    .text.osRtxMemoryInit  RTX_CM3.lib(rtx_memory.o)
    0x00000c48   0x00000c48   0x00000038   Code   RO         1355    .text.osRtxMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x00000c80   0x00000c80   0x00000048   Code   RO         1357    .text.osRtxMemoryPoolFree  RTX_CM3.lib(rtx_mempool.o)
    0x00000cc8   0x00000cc8   0x00000054   Code   RO         1353    .text.osRtxMemoryPoolInit  RTX_CM3.lib(rtx_mempool.o)
    0x00000d1c   0x00000d1c   0x000000ba   Code   RO         1479    .text.osRtxMessageQueuePostProcess  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000dd6   0x00000dd6   0x00000044   Code   RO         1257    .text.osRtxMutexOwnerRelease  RTX_CM3.lib(rtx_mutex.o)
    0x00000e1a   0x00000e1a   0x00000002   PAD
    0x00000e1c   0x00000e1c   0x0000008c   Code   RO         1408    .text.osRtxPendSV_Handler  RTX_CM3.lib(rtx_system.o)
    0x00000ea8   0x00000ea8   0x00000074   Code   RO         1410    .text.osRtxPostProcess  RTX_CM3.lib(rtx_system.o)
    0x00000f1c   0x00000f1c   0x00000038   Code   RO         1144    .text.osRtxThreadBlock  RTX_CM3.lib(rtx_thread.o)
    0x00000f54   0x00000f54   0x00000088   Code   RO         1152    .text.osRtxThreadDelayInsert  RTX_CM3.lib(rtx_thread.o)
    0x00000fdc   0x00000fdc   0x0000004c   Code   RO         1148    .text.osRtxThreadDelayRemove  RTX_CM3.lib(rtx_thread.o)
    0x00001028   0x00001028   0x00000034   Code   RO         1134    .text.osRtxThreadDelayTick  RTX_CM3.lib(rtx_thread.o)
    0x0000105c   0x0000105c   0x0000005c   Code   RO         1142    .text.osRtxThreadDispatch  RTX_CM3.lib(rtx_thread.o)
    0x000010b8   0x000010b8   0x00000054   Code   RO         1228    .text.osRtxThreadFree  RTX_CM3.lib(rtx_thread.o)
    0x0000110c   0x0000110c   0x00000014   Code   RO         1126    .text.osRtxThreadListGet  RTX_CM3.lib(rtx_thread.o)
    0x00001120   0x00001120   0x0000002a   Code   RO         1124    .text.osRtxThreadListPut  RTX_CM3.lib(rtx_thread.o)
    0x0000114a   0x0000114a   0x00000014   Code   RO         1130    .text.osRtxThreadListRemove  RTX_CM3.lib(rtx_thread.o)
    0x0000115e   0x0000115e   0x00000028   Code   RO         1128    .text.osRtxThreadListSort  RTX_CM3.lib(rtx_thread.o)
    0x00001186   0x00001186   0x0000002a   Code   RO         1202    .text.osRtxThreadPostProcess  RTX_CM3.lib(rtx_thread.o)
    0x000011b0   0x000011b0   0x00000014   Code   RO         1132    .text.osRtxThreadReadyPut  RTX_CM3.lib(rtx_thread.o)
    0x000011c4   0x000011c4   0x00000006   Code   RO         1136    .text.osRtxThreadRegPtr  RTX_CM3.lib(rtx_thread.o)
    0x000011ca   0x000011ca   0x00000002   PAD
    0x000011cc   0x000011cc   0x00000028   Code   RO         1140    .text.osRtxThreadStackCheck  RTX_CM3.lib(rtx_thread.o)
    0x000011f4   0x000011f4   0x00000040   Code   RO         1154    .text.osRtxThreadStartup  RTX_CM3.lib(rtx_thread.o)
    0x00001234   0x00001234   0x00000010   Code   RO         1138    .text.osRtxThreadSwitch  RTX_CM3.lib(rtx_thread.o)
    0x00001244   0x00001244   0x0000003c   Code   RO         1150    .text.osRtxThreadWaitEnter  RTX_CM3.lib(rtx_thread.o)
    0x00001280   0x00001280   0x00000024   Code   RO         1146    .text.osRtxThreadWaitExit  RTX_CM3.lib(rtx_thread.o)
    0x000012a4   0x000012a4   0x00000070   Code   RO         1406    .text.osRtxTick_Handler  RTX_CM3.lib(rtx_system.o)
    0x00001314   0x00001314   0x0000003c   Code   RO         1297    .text.osRtxTimerThread  RTX_CM3.lib(rtx_timer.o)
    0x00001350   0x00001350   0x00000058   Code   RO         1299    .text.osRtxTimerTick  RTX_CM3.lib(rtx_timer.o)
    0x000013a8   0x000013a8   0x0000000c   Code   RO         1186    .text.osThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x000013b4   0x000013b4   0x00000028   Code   RO         1162    .text.osThreadGetId  RTX_CM3.lib(rtx_thread.o)
    0x000013dc   0x000013dc   0x00000024   Code   RO         1158    .text.osThreadNew   RTX_CM3.lib(rtx_thread.o)
    0x00001400   0x00001400   0x00000024   Code   RO         1176    .text.osThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x00001424   0x00001424   0x0000000c   Code   RO         1069    .text.svcRtxKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x00001430   0x00001430   0x00000154   Code   RO         1099    .text.svcRtxKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x00001584   0x00001584   0x00000088   Code   RO         1101    .text.svcRtxKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x0000160c   0x0000160c   0x000000e4   Code   RO         1491    .text.svcRtxMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x000016f0   0x000016f0   0x00000134   Code   RO         1477    .text.svcRtxMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x00001824   0x00001824   0x000000c0   Code   RO         1487    .text.svcRtxMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x000018e4   0x000018e4   0x00000090   Code   RO         1275    .text.svcRtxMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x00001974   0x00001974   0x000000c4   Code   RO         1281    .text.svcRtxMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x00001a38   0x00001a38   0x0000006c   Code   RO         1271    .text.svcRtxMutexNew  RTX_CM3.lib(rtx_mutex.o)
    0x00001aa4   0x00001aa4   0x000000b4   Code   RO         1277    .text.svcRtxMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x00001b58   0x00001b58   0x00000074   Code   RO         1232    .text.svcRtxThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x00001bcc   0x00001bcc   0x0000000c   Code   RO         1164    .text.svcRtxThreadGetId  RTX_CM3.lib(rtx_thread.o)
    0x00001bd8   0x00001bd8   0x000001dc   Code   RO         1156    .text.svcRtxThreadNew  RTX_CM3.lib(rtx_thread.o)
    0x00001db4   0x00001db4   0x00000038   Code   RO         1218    .text.svcRtxThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x00001dec   0x00001dec   0x00000020   Code   RO          724    i.EINT3_IRQHandler  pushbutton.o
    0x00001e0c   0x00001e0c   0x00000052   Code   RO          143    i.GLCD_Bitmap       glcd_spi_lpc1700.o
    0x00001e5e   0x00001e5e   0x0000002a   Code   RO          144    i.GLCD_Clear        glcd_spi_lpc1700.o
    0x00001e88   0x00001e88   0x0000005c   Code   RO          146    i.GLCD_DisplayChar  glcd_spi_lpc1700.o
    0x00001ee4   0x00001ee4   0x00000028   Code   RO          147    i.GLCD_DisplayString  glcd_spi_lpc1700.o
    0x00001f0c   0x00001f0c   0x0000009c   Code   RO          148    i.GLCD_DrawChar     glcd_spi_lpc1700.o
    0x00001fa8   0x00001fa8   0x000005e8   Code   RO          149    i.GLCD_Init         glcd_spi_lpc1700.o
    0x00002590   0x00002590   0x000000ac   Code   RO          154    i.GLCD_SetWindow    glcd_spi_lpc1700.o
    0x0000263c   0x0000263c   0x00000012   Code   RO          155    i.GLCD_WindowMax    glcd_spi_lpc1700.o
    0x0000264e   0x0000264e   0x00000002   PAD
    0x00002650   0x00002650   0x00000030   Code   RO          587    i.GUI_Level_1       gui.o
    0x00002680   0x00002680   0x0000010c   Code   RO          588    i.GUI_Level_Menu    gui.o
    0x0000278c   0x0000278c   0x00000070   Code   RO          589    i.GUI_Start         gui.o
    0x000027fc   0x000027fc   0x000000ac   Code   RO          590    i.GUI_Task          gui.o
    0x000028a8   0x000028a8   0x00000090   Code   RO          656    i.Joy_Task          joy.o
    0x00002938   0x00002938   0x00000020   Code   RO          657    i.Joy_init          joy.o
    0x00002958   0x00002958   0x00000084   Code   RO          693    i.Pot_Task          pot.o
    0x000029dc   0x000029dc   0x00000140   Code   RO         1026    i.SystemInit        system_lpc17xx.o
    0x00002b1c   0x00002b1c   0x00000068   Code   RO          401    i.UART0_IRQHandler  uart.o
    0x00002b84   0x00002b84   0x00000070   Code   RO          402    i.UART1_IRQHandler  uart.o
    0x00002bf4   0x00002bf4   0x00000038   Code   RO          407    i.UARTSendChar      uart.o
    0x00002c2c   0x00002c2c   0x00000028   Code   RO         1777    i.__ARM_fpclassify  m_ws.l(fpclassify.o)
    0x00002c54   0x00002c54   0x00000388   Code   RO         1712    i.__ieee754_rem_pio2  m_ws.l(rred.o)
    0x00002fdc   0x00002fdc   0x000000fc   Code   RO         1695    i.__kernel_cos      m_ws.l(cos_i.o)
    0x000030d8   0x000030d8   0x000000aa   Code   RO         1779    i.__kernel_poly     m_ws.l(poly.o)
    0x00003182   0x00003182   0x00000002   PAD
    0x00003184   0x00003184   0x000000ec   Code   RO         1717    i.__kernel_sin      m_ws.l(sin_i.o)
    0x00003270   0x00003270   0x00000006   Code   RO         1699    i.__mathlib_dbl_infnan  m_ws.l(dunder.o)
    0x00003276   0x00003276   0x0000000c   Code   RO         1701    i.__mathlib_dbl_invalid  m_ws.l(dunder.o)
    0x00003282   0x00003282   0x00000002   PAD
    0x00003284   0x00003284   0x00000010   Code   RO         1704    i.__mathlib_dbl_underflow  m_ws.l(dunder.o)
    0x00003294   0x00003294   0x00000058   Code   RO          891    i.__user_perthread_libspace  rtx_lib.o
    0x000032ec   0x000032ec   0x00000016   Code   RO          892    i._mutex_acquire    rtx_lib.o
    0x00003302   0x00003302   0x0000000c   Code   RO          893    i._mutex_free       rtx_lib.o
    0x0000330e   0x0000330e   0x00000022   Code   RO          894    i._mutex_initialize  rtx_lib.o
    0x00003330   0x00003330   0x00000012   Code   RO          895    i._mutex_release    rtx_lib.o
    0x00003342   0x00003342   0x00000008   Code   RO          896    i._platform_post_stackheap_init  rtx_lib.o
    0x0000334a   0x0000334a   0x00000004   Code   RO          328    i._sys_exit         retarget.o
    0x0000334e   0x0000334e   0x0000000c   Code   RO          329    i._ttywrch          retarget.o
    0x0000335a   0x0000335a   0x00000002   PAD
    0x0000335c   0x0000335c   0x00000054   Code   RO          591    i.animate_enemy     gui.o
    0x000033b0   0x000033b0   0x0000007c   Code   RO          592    i.animate_player    gui.o
    0x0000342c   0x0000342c   0x0000000e   Code   RO          158    i.delay             glcd_spi_lpc1700.o
    0x0000343a   0x0000343a   0x00000002   PAD
    0x0000343c   0x0000343c   0x00000090   Code   RO          769    i.enemy_init        enemy.o
    0x000034cc   0x000034cc   0x000000c4   Code   RO          770    i.enemy_path        enemy.o
    0x00003590   0x00003590   0x000000b4   Code   RO          771    i.enemy_task        enemy.o
    0x00003644   0x00003644   0x0000001c   Code   RO          509    i.init              main.o
    0x00003660   0x00003660   0x00000020   Code   RO          825    i.ladder_avaliable  player.o
    0x00003680   0x00003680   0x0000003a   Code   RO          826    i.legalize          player.o
    0x000036ba   0x000036ba   0x00000002   PAD
    0x000036bc   0x000036bc   0x00000080   Code   RO          510    i.main              main.o
    0x0000373c   0x0000373c   0x00000020   Code   RO          981    i.osRtxErrorNotify  rtx_config.o
    0x0000375c   0x0000375c   0x00000004   Code   RO          982    i.osRtxIdleThread   rtx_config.o
    0x00003760   0x00003760   0x00000020   Code   RO          897    i.os_kernel_is_active  rtx_lib.o
    0x00003780   0x00003780   0x00000058   Code   RO          827    i.player_init       player.o
    0x000037d8   0x000037d8   0x000000ec   Code   RO          828    i.player_task       player.o
    0x000038c4   0x000038c4   0x0000008c   Code   RO          159    i.rd_id_man         glcd_spi_lpc1700.o
    0x00003950   0x00003950   0x00000048   Code   RO          160    i.rd_reg            glcd_spi_lpc1700.o
    0x00003998   0x00003998   0x0000002a   Code   RO          334    i.sendchar          retarget.o
    0x000039c2   0x000039c2   0x00000002   PAD
    0x000039c4   0x000039c4   0x00000034   Code   RO          725    i.setup_INT0        pushbutton.o
    0x000039f8   0x000039f8   0x000000a0   Code   RO         1600    i.sin               m_ws.l(sin.o)
    0x00003a98   0x00003a98   0x00000020   Code   RO          161    i.spi_tran          glcd_spi_lpc1700.o
    0x00003ab8   0x00003ab8   0x00000080   Code   RO          162    i.spi_tran_man      glcd_spi_lpc1700.o
    0x00003b38   0x00003b38   0x00000028   Code   RO          163    i.wr_cmd            glcd_spi_lpc1700.o
    0x00003b60   0x00003b60   0x00000028   Code   RO          164    i.wr_dat            glcd_spi_lpc1700.o
    0x00003b88   0x00003b88   0x00000012   Code   RO          165    i.wr_dat_only       glcd_spi_lpc1700.o
    0x00003b9a   0x00003b9a   0x00000002   PAD
    0x00003b9c   0x00003b9c   0x00000014   Code   RO          166    i.wr_dat_start      glcd_spi_lpc1700.o
    0x00003bb0   0x00003bb0   0x0000000c   Code   RO          167    i.wr_dat_stop       glcd_spi_lpc1700.o
    0x00003bbc   0x00003bbc   0x00000014   Code   RO          168    i.wr_reg            glcd_spi_lpc1700.o
    0x00003bd0   0x00003bd0   0x00000150   Code   RO         1581    x$fpl$dadd          fz_ws.l(daddsub_clz.o)
    0x00003d20   0x00003d20   0x00000010   Code   RO         1808    x$fpl$dcheck1       fz_ws.l(dcheck1.o)
    0x00003d30   0x00003d30   0x000002b0   Code   RO         1770    x$fpl$ddiv          fz_ws.l(ddiv.o)
    0x00003fe0   0x00003fe0   0x0000005e   Code   RO         1587    x$fpl$dfix          fz_ws.l(dfix.o)
    0x0000403e   0x0000403e   0x0000002e   Code   RO         1592    x$fpl$dflt          fz_ws.l(dflt_clz.o)
    0x0000406c   0x0000406c   0x00000026   Code   RO         1591    x$fpl$dfltu         fz_ws.l(dflt_clz.o)
    0x00004092   0x00004092   0x00000002   PAD
    0x00004094   0x00004094   0x00000154   Code   RO         1597    x$fpl$dmul          fz_ws.l(dmul.o)
    0x000041e8   0x000041e8   0x0000009c   Code   RO         1690    x$fpl$dnaninf       fz_ws.l(dnaninf.o)
    0x00004284   0x00004284   0x0000000c   Code   RO         1692    x$fpl$dretinf       fz_ws.l(dretinf.o)
    0x00004290   0x00004290   0x00000016   Code   RO         1582    x$fpl$drsb          fz_ws.l(daddsub_clz.o)
    0x000042a6   0x000042a6   0x00000002   PAD
    0x000042a8   0x000042a8   0x000001d4   Code   RO         1583    x$fpl$dsub          fz_ws.l(daddsub_clz.o)
    0x0000447c   0x0000447c   0x00000064   Code   RO         1838    x$fpl$retnan        fz_ws.l(retnan.o)
    0x000044e0   0x000044e0   0x0000005c   Code   RO         1775    x$fpl$scalbn        fz_ws.l(scalbn.o)
    0x0000453c   0x0000453c   0x00000030   Code   RO         1849    x$fpl$trapveneer    fz_ws.l(trapv.o)
    0x0000456c   0x0000456c   0x00000000   Code   RO         1694    x$fpl$usenofp       fz_ws.l(usenofp.o)
    0x0000456c   0x0000456c   0x00001880   Data   RO          169    .constdata          glcd_spi_lpc1700.o
    0x00005dec   0x00005dec   0x00000709   Data   RO          878    .constdata          bitmaps.o
    0x000064f5   0x000064f5   0x00000003   PAD
    0x000064f8   0x000064f8   0x00000064   Data   RO          904    .constdata          rtx_lib.o
    0x0000655c   0x0000655c   0x00000001   Data   RO         1291    .constdata          RTX_CM3.lib(irq_cm3.o)
    0x0000655d   0x0000655d   0x00000003   PAD
    0x00006560   0x00006560   0x00000030   Data   RO         1696    .constdata          m_ws.l(cos_i.o)
    0x00006590   0x00006590   0x000000c8   Data   RO         1714    .constdata          m_ws.l(rred.o)
    0x00006658   0x00006658   0x00000028   Data   RO         1718    .constdata          m_ws.l(sin_i.o)
    0x00006680   0x00006680   0x00000068   Data   RO          906    .rodata             rtx_lib.o
    0x000066e8   0x000066e8   0x0000000b   Data   RO         1113    .rodata.str1.4      RTX_CM3.lib(rtx_kernel.o)
    0x000066f3   0x000066f3   0x00000001   PAD
    0x000066f4   0x000066f4   0x00000020   Data   RO         1868    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x10000000, Load base: 0x00006714, Size: 0x0000165c, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000048])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10000000   COMPRESSED   0x00001040   Data   RW          898    .bss.os             rtx_lib.o
    0x10001040   COMPRESSED   0x000001f0   Data   RW          899    .bss.os.libspace    rtx_lib.o
    0x10001230   COMPRESSED   0x00000034   Data   RW          900    .bss.os.msgqueue.cb  rtx_lib.o
    0x10001264   COMPRESSED   0x00000050   Data   RW          901    .bss.os.msgqueue.mem  rtx_lib.o
    0x100012b4   COMPRESSED   0x00000088   Data   RW          902    .bss.os.thread.cb   rtx_lib.o
    0x1000133c   COMPRESSED   0x00000004   PAD
    0x10001340   COMPRESSED   0x00000200   Data   RW          903    .bss.os.thread.stack  rtx_lib.o
    0x10001540   COMPRESSED   0x00000005   Data   RW          170    .data               glcd_spi_lpc1700.o
    0x10001545   COMPRESSED   0x00000003   PAD
    0x10001548   COMPRESSED   0x00000020   Data   RW          411    .data               uart.o
    0x10001568   COMPRESSED   0x00000014   Data   RW          511    .data               main.o
    0x1000157c   COMPRESSED   0x00000009   Data   RW          593    .data               gui.o
    0x10001585   COMPRESSED   0x00000003   PAD
    0x10001588   COMPRESSED   0x00000008   Data   RW          658    .data               joy.o
    0x10001590   COMPRESSED   0x00000008   Data   RW          694    .data               pot.o
    0x10001598   COMPRESSED   0x00000001   Data   RW          726    .data               pushbutton.o
    0x10001599   COMPRESSED   0x00000003   PAD
    0x1000159c   COMPRESSED   0x00000008   Data   RW          773    .data               enemy.o
    0x100015a4   COMPRESSED   0x00000008   Data   RW          829    .data               player.o
    0x100015ac   COMPRESSED   0x00000005   Data   RW          905    .data               rtx_lib.o
    0x100015b1   COMPRESSED   0x00000003   PAD
    0x100015b4   COMPRESSED   0x00000004   Data   RW         1027    .data               system_lpc17xx.o
    0x100015b8   COMPRESSED   0x000000a4   Data   RW         1114    .data.os            RTX_CM3.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x1000165c, Load base: 0x0000675c, Size: 0x000040f4, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1000165c        -       0x00000080   Zero   RW          410    .bss                uart.o
    0x100016dc        -       0x0000000c   Zero   RW          772    .bss                enemy.o
    0x100016e8        -       0x00000060   Zero   RW         1726    .bss                c_w.l(libspace.o)
    0x10001748        -       0x00000001   Zero   RW         1439    .bss.PendST         RTX_CM3.lib(os_systick.o)
    0x10001749   0x0000675c   0x00000007   PAD
    0x10001750        -       0x00002000   Zero   RW         1013    HEAP                startup_lpc17xx.o
    0x10003750        -       0x00002000   Zero   RW         1012    STACK               startup_lpc17xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0       1801          0          0        696   bitmaps.o
       520         46          0          8         12       3903   enemy.o
         0          0          0          0          0      21336   glcd_scroll.o
      2650         82       6272          5          0      32859   glcd_spi_lpc1700.o
       808        196          0          9          0       5376   gui.o
       176         22          0          8          0       2783   joy.o
       156         42          0         20          0       5048   main.o
       414         36          0          8          0       4491   player.o
       132         24          0          8          0        832   pot.o
        84         14          0          1          0      27859   pushbutton.o
        58          0          0          0          0       1714   retarget.o
        36          6          0          0          0       1117   rtx_config.o
       214         12        204       5441          0      16627   rtx_lib.o
        68         30        204          0      16384       1156   startup_lpc17xx.o
       320         18          0          4          0        963   system_lpc17xx.o
       272         42          0         32        128      29998   uart.o

    ----------------------------------------------------------------------
      5920        570       8516       5560      16524     156758   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        12          0          3         16          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       148         10          1          0          0        484   irq_cm3.o
       126         32          0          0          1       3092   os_systick.o
       618         48         11        164          0      17153   rtx_kernel.o
       260          0          0          0          0       2439   rtx_memory.o
       212          0          0          0          0      15974   rtx_mempool.o
      1372         28          0          0          0      18500   rtx_msgqueue.o
       840         32          0          0          0       9376   rtx_mutex.o
       368         26          0          0          0       5321   rtx_system.o
      1794        112          0          0          0      32263   rtx_thread.o
       228         20          0          0          0      10209   rtx_timer.o
        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        22          0          0          0          0        100   _rserrno.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        18          0          0          0          0         80   exit.o
       158          0          0          0          0        128   h1_alloc_mt.o
        62          0          0          0          0         80   h1_extend_mt.o
        10          0          0          0          0         76   h1_final_mt.o
       118          0          0          0          0        108   h1_free_mt.o
        18          0          0          0          0         84   h1_init_mt.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
       138          0          0          0          0        168   init_alloc.o
         2          0          0          0          0          0   libinit.o
        10          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         6          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
         0          0          0          0          0          0   maybetermalloc2.o
         4          0          0          0          0         68   rt_errno_addr_twolibspace.o
        10          0          0          0          0         76   rt_heap_descriptor_twolibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        16          0          0          0          0         80   term_alloc.o
       826         16          0          0          0        348   daddsub_clz.o
        16          4          0          0          0         68   dcheck1.o
       688        140          0          0          0        208   ddiv.o
        94          4          0          0          0         92   dfix.o
        84          0          0          0          0        136   dflt_clz.o
       340         12          0          0          0        104   dmul.o
       156          4          0          0          0         92   dnaninf.o
        12          0          0          0          0         68   dretinf.o
       100          0          0          0          0         68   retnan.o
        92          0          0          0          0         68   scalbn.o
        48          0          0          0          0         68   trapv.o
         0          0          0          0          0          0   usenofp.o
       252         22         48          0          0        124   cos_i.o
        34          6          0          0          0        204   dunder.o
        40          0          0          0          0         68   fpclassify.o
       170          0          0          0          0         96   poly.o
       904         76        200          0          0        140   rred.o
       160         10          0          0          0        108   sin.o
       236         12         40          0          0        128   sin_i.o

    ----------------------------------------------------------------------
     11648        684        304        164        104     119159   Library Totals
        22          0          4          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      5966        308         12        164          1     114811   RTX_CM3.lib
      1408         70          0          0         96       2160   c_w.l
      2456        180          0          0          0       1320   fz_ws.l
      1796        126        288          0          0        868   m_ws.l

    ----------------------------------------------------------------------
     11648        684        304        164        104     119159   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     17568       1254       8820       5724      16628     270793   Grand Totals
     17568       1254       8820         72      16628     270793   ELF Image Totals (compressed)
     17568       1254       8820         72          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                26388 (  25.77kB)
    Total RW  Size (RW Data + ZI Data)             22352 (  21.83kB)
    Total ROM Size (Code + RO Data + RW Data)      26460 (  25.84kB)

==============================================================================

